{"ast":null,"code":"import _regeneratorRuntime from \"/Users/souhaib./Quizz/Quiz/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/souhaib./Quizz/Quiz/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _toConsumableArray from \"/Users/souhaib./Quizz/Quiz/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _typeof from \"/Users/souhaib./Quizz/Quiz/node_modules/@babel/runtime/helpers/esm/typeof.js\";\nimport _assertThisInitialized from \"/Users/souhaib./Quizz/Quiz/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _callSuper from \"/Users/souhaib./Quizz/Quiz/node_modules/@babel/runtime/helpers/esm/callSuper.js\";\nimport _inherits from \"/Users/souhaib./Quizz/Quiz/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createForOfIteratorHelper from \"/Users/souhaib./Quizz/Quiz/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _defineProperty from \"/Users/souhaib./Quizz/Quiz/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _classCallCheck from \"/Users/souhaib./Quizz/Quiz/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/souhaib./Quizz/Quiz/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nvar _PLATFORM_LOG_STRING, _ERRORS;\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.reduce.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.array.some.js\";\nimport \"core-js/modules/es.date.now.js\";\nimport \"core-js/modules/es.date.to-iso-string.js\";\nimport \"core-js/modules/es.date.to-json.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.iterator.some.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/es.map.js\";\nimport \"core-js/modules/es.math.imul.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/es.string.match.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport { Component, ComponentContainer } from '@firebase/component';\nimport { Logger, setUserLogHandler, setLogLevel as setLogLevel$1 } from '@firebase/logger';\nimport { ErrorFactory, getDefaultAppConfig, deepEqual, isBrowser, isWebWorker, FirebaseError, base64urlEncodeWithoutPadding, isIndexedDBAvailable, validateIndexedDBOpenable } from '@firebase/util';\nexport { FirebaseError } from '@firebase/util';\nimport { openDB } from 'idb';\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar PlatformLoggerServiceImpl = /*#__PURE__*/function () {\n  function PlatformLoggerServiceImpl(container) {\n    _classCallCheck(this, PlatformLoggerServiceImpl);\n    this.container = container;\n  }\n  // In initial implementation, this will be called by installations on\n  // auth token refresh, and installations will send this string.\n  return _createClass(PlatformLoggerServiceImpl, [{\n    key: \"getPlatformInfoString\",\n    value: function getPlatformInfoString() {\n      var providers = this.container.getProviders();\n      // Loop through providers and get library/version pairs from any that are\n      // version components.\n      return providers.map(function (provider) {\n        if (isVersionServiceProvider(provider)) {\n          var service = provider.getImmediate();\n          return \"\".concat(service.library, \"/\").concat(service.version);\n        } else {\n          return null;\n        }\n      }).filter(function (logString) {\n        return logString;\n      }).join(' ');\n    }\n  }]);\n}();\n/**\r\n *\r\n * @param provider check if this provider provides a VersionService\r\n *\r\n * NOTE: Using Provider<'app-version'> is a hack to indicate that the provider\r\n * provides VersionService. The provider is not necessarily a 'app-version'\r\n * provider.\r\n */\nfunction isVersionServiceProvider(provider) {\n  var component = provider.getComponent();\n  return (component === null || component === void 0 ? void 0 : component.type) === \"VERSION\" /* ComponentType.VERSION */;\n}\nvar name$q = \"@firebase/app\";\nvar version$1 = \"0.10.13\";\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar logger = new Logger('@firebase/app');\nvar name$p = \"@firebase/app-compat\";\nvar name$o = \"@firebase/analytics-compat\";\nvar name$n = \"@firebase/analytics\";\nvar name$m = \"@firebase/app-check-compat\";\nvar name$l = \"@firebase/app-check\";\nvar name$k = \"@firebase/auth\";\nvar name$j = \"@firebase/auth-compat\";\nvar name$i = \"@firebase/database\";\nvar name$h = \"@firebase/data-connect\";\nvar name$g = \"@firebase/database-compat\";\nvar name$f = \"@firebase/functions\";\nvar name$e = \"@firebase/functions-compat\";\nvar name$d = \"@firebase/installations\";\nvar name$c = \"@firebase/installations-compat\";\nvar name$b = \"@firebase/messaging\";\nvar name$a = \"@firebase/messaging-compat\";\nvar name$9 = \"@firebase/performance\";\nvar name$8 = \"@firebase/performance-compat\";\nvar name$7 = \"@firebase/remote-config\";\nvar name$6 = \"@firebase/remote-config-compat\";\nvar name$5 = \"@firebase/storage\";\nvar name$4 = \"@firebase/storage-compat\";\nvar name$3 = \"@firebase/firestore\";\nvar name$2 = \"@firebase/vertexai-preview\";\nvar name$1 = \"@firebase/firestore-compat\";\nvar name = \"firebase\";\nvar version = \"10.14.1\";\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * The default app name\r\n *\r\n * @internal\r\n */\nvar DEFAULT_ENTRY_NAME = '[DEFAULT]';\nvar PLATFORM_LOG_STRING = (_PLATFORM_LOG_STRING = {}, _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_PLATFORM_LOG_STRING, name$q, 'fire-core'), name$p, 'fire-core-compat'), name$n, 'fire-analytics'), name$o, 'fire-analytics-compat'), name$l, 'fire-app-check'), name$m, 'fire-app-check-compat'), name$k, 'fire-auth'), name$j, 'fire-auth-compat'), name$i, 'fire-rtdb'), name$h, 'fire-data-connect'), _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_PLATFORM_LOG_STRING, name$g, 'fire-rtdb-compat'), name$f, 'fire-fn'), name$e, 'fire-fn-compat'), name$d, 'fire-iid'), name$c, 'fire-iid-compat'), name$b, 'fire-fcm'), name$a, 'fire-fcm-compat'), name$9, 'fire-perf'), name$8, 'fire-perf-compat'), name$7, 'fire-rc'), _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_PLATFORM_LOG_STRING, name$6, 'fire-rc-compat'), name$5, 'fire-gcs'), name$4, 'fire-gcs-compat'), name$3, 'fire-fst'), name$1, 'fire-fst-compat'), name$2, 'fire-vertex'), 'fire-js', 'fire-js'), name, 'fire-js-all'));\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * @internal\r\n */\nvar _apps = new Map();\n/**\r\n * @internal\r\n */\nvar _serverApps = new Map();\n/**\r\n * Registered components.\r\n *\r\n * @internal\r\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nvar _components = new Map();\n/**\r\n * @param component - the component being added to this app's container\r\n *\r\n * @internal\r\n */\nfunction _addComponent(app, component) {\n  try {\n    app.container.addComponent(component);\n  } catch (e) {\n    logger.debug(\"Component \".concat(component.name, \" failed to register with FirebaseApp \").concat(app.name), e);\n  }\n}\n/**\r\n *\r\n * @internal\r\n */\nfunction _addOrOverwriteComponent(app, component) {\n  app.container.addOrOverwriteComponent(component);\n}\n/**\r\n *\r\n * @param component - the component to register\r\n * @returns whether or not the component is registered successfully\r\n *\r\n * @internal\r\n */\nfunction _registerComponent(component) {\n  var componentName = component.name;\n  if (_components.has(componentName)) {\n    logger.debug(\"There were multiple attempts to register component \".concat(componentName, \".\"));\n    return false;\n  }\n  _components.set(componentName, component);\n  // add the component to existing app instances\n  var _iterator = _createForOfIteratorHelper(_apps.values()),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var app = _step.value;\n      _addComponent(app, component);\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  var _iterator2 = _createForOfIteratorHelper(_serverApps.values()),\n    _step2;\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var serverApp = _step2.value;\n      _addComponent(serverApp, component);\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n  return true;\n}\n/**\r\n *\r\n * @param app - FirebaseApp instance\r\n * @param name - service name\r\n *\r\n * @returns the provider for the service with the matching name\r\n *\r\n * @internal\r\n */\nfunction _getProvider(app, name) {\n  var heartbeatController = app.container.getProvider('heartbeat').getImmediate({\n    optional: true\n  });\n  if (heartbeatController) {\n    void heartbeatController.triggerHeartbeat();\n  }\n  return app.container.getProvider(name);\n}\n/**\r\n *\r\n * @param app - FirebaseApp instance\r\n * @param name - service name\r\n * @param instanceIdentifier - service instance identifier in case the service supports multiple instances\r\n *\r\n * @internal\r\n */\nfunction _removeServiceInstance(app, name) {\n  var instanceIdentifier = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : DEFAULT_ENTRY_NAME;\n  _getProvider(app, name).clearInstance(instanceIdentifier);\n}\n/**\r\n *\r\n * @param obj - an object of type FirebaseApp or FirebaseOptions.\r\n *\r\n * @returns true if the provide object is of type FirebaseApp.\r\n *\r\n * @internal\r\n */\nfunction _isFirebaseApp(obj) {\n  return obj.options !== undefined;\n}\n/**\r\n *\r\n * @param obj - an object of type FirebaseApp.\r\n *\r\n * @returns true if the provided object is of type FirebaseServerAppImpl.\r\n *\r\n * @internal\r\n */\nfunction _isFirebaseServerApp(obj) {\n  return obj.settings !== undefined;\n}\n/**\r\n * Test only\r\n *\r\n * @internal\r\n */\nfunction _clearComponents() {\n  _components.clear();\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar ERRORS = (_ERRORS = {}, _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_ERRORS, \"no-app\" /* AppError.NO_APP */, \"No Firebase App '{$appName}' has been created - \" + 'call initializeApp() first'), \"bad-app-name\" /* AppError.BAD_APP_NAME */, \"Illegal App name: '{$appName}'\"), \"duplicate-app\" /* AppError.DUPLICATE_APP */, \"Firebase App named '{$appName}' already exists with different options or config\"), \"app-deleted\" /* AppError.APP_DELETED */, \"Firebase App named '{$appName}' already deleted\"), \"server-app-deleted\" /* AppError.SERVER_APP_DELETED */, 'Firebase Server App has been deleted'), \"no-options\" /* AppError.NO_OPTIONS */, 'Need to provide options, when not being deployed to hosting via source.'), \"invalid-app-argument\" /* AppError.INVALID_APP_ARGUMENT */, 'firebase.{$appName}() takes either no argument or a ' + 'Firebase App instance.'), \"invalid-log-argument\" /* AppError.INVALID_LOG_ARGUMENT */, 'First argument to `onLog` must be null or a function.'), \"idb-open\" /* AppError.IDB_OPEN */, 'Error thrown when opening IndexedDB. Original error: {$originalErrorMessage}.'), \"idb-get\" /* AppError.IDB_GET */, 'Error thrown when reading from IndexedDB. Original error: {$originalErrorMessage}.'), _defineProperty(_defineProperty(_defineProperty(_defineProperty(_ERRORS, \"idb-set\" /* AppError.IDB_WRITE */, 'Error thrown when writing to IndexedDB. Original error: {$originalErrorMessage}.'), \"idb-delete\" /* AppError.IDB_DELETE */, 'Error thrown when deleting from IndexedDB. Original error: {$originalErrorMessage}.'), \"finalization-registry-not-supported\" /* AppError.FINALIZATION_REGISTRY_NOT_SUPPORTED */, 'FirebaseServerApp deleteOnDeref field defined but the JS runtime does not support FinalizationRegistry.'), \"invalid-server-app-environment\" /* AppError.INVALID_SERVER_APP_ENVIRONMENT */, 'FirebaseServerApp is not for use in browser environments.'));\nvar ERROR_FACTORY = new ErrorFactory('app', 'Firebase', ERRORS);\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar FirebaseAppImpl = /*#__PURE__*/function () {\n  function FirebaseAppImpl(options, config, container) {\n    var _this = this;\n    _classCallCheck(this, FirebaseAppImpl);\n    this._isDeleted = false;\n    this._options = Object.assign({}, options);\n    this._config = Object.assign({}, config);\n    this._name = config.name;\n    this._automaticDataCollectionEnabled = config.automaticDataCollectionEnabled;\n    this._container = container;\n    this.container.addComponent(new Component('app', function () {\n      return _this;\n    }, \"PUBLIC\" /* ComponentType.PUBLIC */));\n  }\n  return _createClass(FirebaseAppImpl, [{\n    key: \"automaticDataCollectionEnabled\",\n    get: function get() {\n      this.checkDestroyed();\n      return this._automaticDataCollectionEnabled;\n    },\n    set: function set(val) {\n      this.checkDestroyed();\n      this._automaticDataCollectionEnabled = val;\n    }\n  }, {\n    key: \"name\",\n    get: function get() {\n      this.checkDestroyed();\n      return this._name;\n    }\n  }, {\n    key: \"options\",\n    get: function get() {\n      this.checkDestroyed();\n      return this._options;\n    }\n  }, {\n    key: \"config\",\n    get: function get() {\n      this.checkDestroyed();\n      return this._config;\n    }\n  }, {\n    key: \"container\",\n    get: function get() {\n      return this._container;\n    }\n  }, {\n    key: \"isDeleted\",\n    get: function get() {\n      return this._isDeleted;\n    },\n    set: function set(val) {\n      this._isDeleted = val;\n    }\n    /**\r\n     * This function will throw an Error if the App has already been deleted -\r\n     * use before performing API actions on the App.\r\n     */\n  }, {\n    key: \"checkDestroyed\",\n    value: function checkDestroyed() {\n      if (this.isDeleted) {\n        throw ERROR_FACTORY.create(\"app-deleted\" /* AppError.APP_DELETED */, {\n          appName: this._name\n        });\n      }\n    }\n  }]);\n}();\n/**\r\n * @license\r\n * Copyright 2023 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar FirebaseServerAppImpl = /*#__PURE__*/function (_FirebaseAppImpl) {\n  function FirebaseServerAppImpl(options, serverConfig, name, container) {\n    var _this2;\n    _classCallCheck(this, FirebaseServerAppImpl);\n    // Build configuration parameters for the FirebaseAppImpl base class.\n    var automaticDataCollectionEnabled = serverConfig.automaticDataCollectionEnabled !== undefined ? serverConfig.automaticDataCollectionEnabled : false;\n    // Create the FirebaseAppSettings object for the FirebaseAppImp constructor.\n    var config = {\n      name: name,\n      automaticDataCollectionEnabled: automaticDataCollectionEnabled\n    };\n    if (options.apiKey !== undefined) {\n      // Construct the parent FirebaseAppImp object.\n      _this2 = _callSuper(this, FirebaseServerAppImpl, [options, config, container]);\n    } else {\n      var appImpl = options;\n      _this2 = _callSuper(this, FirebaseServerAppImpl, [appImpl.options, config, container]);\n    }\n    // Now construct the data for the FirebaseServerAppImpl.\n    _this2._serverConfig = Object.assign({\n      automaticDataCollectionEnabled: automaticDataCollectionEnabled\n    }, serverConfig);\n    _this2._finalizationRegistry = null;\n    if (typeof FinalizationRegistry !== 'undefined') {\n      _this2._finalizationRegistry = new FinalizationRegistry(function () {\n        _this2.automaticCleanup();\n      });\n    }\n    _this2._refCount = 0;\n    _this2.incRefCount(_this2._serverConfig.releaseOnDeref);\n    // Do not retain a hard reference to the dref object, otherwise the FinalizationRegistry\n    // will never trigger.\n    _this2._serverConfig.releaseOnDeref = undefined;\n    serverConfig.releaseOnDeref = undefined;\n    registerVersion(name$q, version$1, 'serverapp');\n    return _assertThisInitialized(_this2);\n  }\n  _inherits(FirebaseServerAppImpl, _FirebaseAppImpl);\n  return _createClass(FirebaseServerAppImpl, [{\n    key: \"toJSON\",\n    value: function toJSON() {\n      return undefined;\n    }\n  }, {\n    key: \"refCount\",\n    get: function get() {\n      return this._refCount;\n    }\n    // Increment the reference count of this server app. If an object is provided, register it\n    // with the finalization registry.\n  }, {\n    key: \"incRefCount\",\n    value: function incRefCount(obj) {\n      if (this.isDeleted) {\n        return;\n      }\n      this._refCount++;\n      if (obj !== undefined && this._finalizationRegistry !== null) {\n        this._finalizationRegistry.register(obj, this);\n      }\n    }\n    // Decrement the reference count.\n  }, {\n    key: \"decRefCount\",\n    value: function decRefCount() {\n      if (this.isDeleted) {\n        return 0;\n      }\n      return --this._refCount;\n    }\n    // Invoked by the FinalizationRegistry callback to note that this app should go through its\n    // reference counts and delete itself if no reference count remain. The coordinating logic that\n    // handles this is in deleteApp(...).\n  }, {\n    key: \"automaticCleanup\",\n    value: function automaticCleanup() {\n      void deleteApp(this);\n    }\n  }, {\n    key: \"settings\",\n    get: function get() {\n      this.checkDestroyed();\n      return this._serverConfig;\n    }\n    /**\r\n     * This function will throw an Error if the App has already been deleted -\r\n     * use before performing API actions on the App.\r\n     */\n  }, {\n    key: \"checkDestroyed\",\n    value: function checkDestroyed() {\n      if (this.isDeleted) {\n        throw ERROR_FACTORY.create(\"server-app-deleted\" /* AppError.SERVER_APP_DELETED */);\n      }\n    }\n  }]);\n}(FirebaseAppImpl);\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * The current SDK version.\r\n *\r\n * @public\r\n */\nvar SDK_VERSION = version;\nfunction initializeApp(_options) {\n  var rawConfig = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var options = _options;\n  if (_typeof(rawConfig) !== 'object') {\n    var _name = rawConfig;\n    rawConfig = {\n      name: _name\n    };\n  }\n  var config = Object.assign({\n    name: DEFAULT_ENTRY_NAME,\n    automaticDataCollectionEnabled: false\n  }, rawConfig);\n  var name = config.name;\n  if (typeof name !== 'string' || !name) {\n    throw ERROR_FACTORY.create(\"bad-app-name\" /* AppError.BAD_APP_NAME */, {\n      appName: String(name)\n    });\n  }\n  options || (options = getDefaultAppConfig());\n  if (!options) {\n    throw ERROR_FACTORY.create(\"no-options\" /* AppError.NO_OPTIONS */);\n  }\n  var existingApp = _apps.get(name);\n  if (existingApp) {\n    // return the existing app if options and config deep equal the ones in the existing app.\n    if (deepEqual(options, existingApp.options) && deepEqual(config, existingApp.config)) {\n      return existingApp;\n    } else {\n      throw ERROR_FACTORY.create(\"duplicate-app\" /* AppError.DUPLICATE_APP */, {\n        appName: name\n      });\n    }\n  }\n  var container = new ComponentContainer(name);\n  var _iterator3 = _createForOfIteratorHelper(_components.values()),\n    _step3;\n  try {\n    for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n      var component = _step3.value;\n      container.addComponent(component);\n    }\n  } catch (err) {\n    _iterator3.e(err);\n  } finally {\n    _iterator3.f();\n  }\n  var newApp = new FirebaseAppImpl(options, config, container);\n  _apps.set(name, newApp);\n  return newApp;\n}\nfunction initializeServerApp(_options, _serverAppConfig) {\n  if (isBrowser() && !isWebWorker()) {\n    // FirebaseServerApp isn't designed to be run in browsers.\n    throw ERROR_FACTORY.create(\"invalid-server-app-environment\" /* AppError.INVALID_SERVER_APP_ENVIRONMENT */);\n  }\n  if (_serverAppConfig.automaticDataCollectionEnabled === undefined) {\n    _serverAppConfig.automaticDataCollectionEnabled = false;\n  }\n  var appOptions;\n  if (_isFirebaseApp(_options)) {\n    appOptions = _options.options;\n  } else {\n    appOptions = _options;\n  }\n  // Build an app name based on a hash of the configuration options.\n  var nameObj = Object.assign(Object.assign({}, _serverAppConfig), appOptions);\n  // However, Do not mangle the name based on releaseOnDeref, since it will vary between the\n  // construction of FirebaseServerApp instances. For example, if the object is the request headers.\n  if (nameObj.releaseOnDeref !== undefined) {\n    delete nameObj.releaseOnDeref;\n  }\n  var hashCode = function hashCode(s) {\n    return _toConsumableArray(s).reduce(function (hash, c) {\n      return Math.imul(31, hash) + c.charCodeAt(0) | 0;\n    }, 0);\n  };\n  if (_serverAppConfig.releaseOnDeref !== undefined) {\n    if (typeof FinalizationRegistry === 'undefined') {\n      throw ERROR_FACTORY.create(\"finalization-registry-not-supported\" /* AppError.FINALIZATION_REGISTRY_NOT_SUPPORTED */, {});\n    }\n  }\n  var nameString = '' + hashCode(JSON.stringify(nameObj));\n  var existingApp = _serverApps.get(nameString);\n  if (existingApp) {\n    existingApp.incRefCount(_serverAppConfig.releaseOnDeref);\n    return existingApp;\n  }\n  var container = new ComponentContainer(nameString);\n  var _iterator4 = _createForOfIteratorHelper(_components.values()),\n    _step4;\n  try {\n    for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n      var component = _step4.value;\n      container.addComponent(component);\n    }\n  } catch (err) {\n    _iterator4.e(err);\n  } finally {\n    _iterator4.f();\n  }\n  var newApp = new FirebaseServerAppImpl(appOptions, _serverAppConfig, nameString, container);\n  _serverApps.set(nameString, newApp);\n  return newApp;\n}\n/**\r\n * Retrieves a {@link @firebase/app#FirebaseApp} instance.\r\n *\r\n * When called with no arguments, the default app is returned. When an app name\r\n * is provided, the app corresponding to that name is returned.\r\n *\r\n * An exception is thrown if the app being retrieved has not yet been\r\n * initialized.\r\n *\r\n * @example\r\n * ```javascript\r\n * // Return the default app\r\n * const app = getApp();\r\n * ```\r\n *\r\n * @example\r\n * ```javascript\r\n * // Return a named app\r\n * const otherApp = getApp(\"otherApp\");\r\n * ```\r\n *\r\n * @param name - Optional name of the app to return. If no name is\r\n *   provided, the default is `\"[DEFAULT]\"`.\r\n *\r\n * @returns The app corresponding to the provided app name.\r\n *   If no app name is provided, the default app is returned.\r\n *\r\n * @public\r\n */\nfunction getApp() {\n  var name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DEFAULT_ENTRY_NAME;\n  var app = _apps.get(name);\n  if (!app && name === DEFAULT_ENTRY_NAME && getDefaultAppConfig()) {\n    return initializeApp();\n  }\n  if (!app) {\n    throw ERROR_FACTORY.create(\"no-app\" /* AppError.NO_APP */, {\n      appName: name\n    });\n  }\n  return app;\n}\n/**\r\n * A (read-only) array of all initialized apps.\r\n * @public\r\n */\nfunction getApps() {\n  return Array.from(_apps.values());\n}\n/**\r\n * Renders this app unusable and frees the resources of all associated\r\n * services.\r\n *\r\n * @example\r\n * ```javascript\r\n * deleteApp(app)\r\n *   .then(function() {\r\n *     console.log(\"App deleted successfully\");\r\n *   })\r\n *   .catch(function(error) {\r\n *     console.log(\"Error deleting app:\", error);\r\n *   });\r\n * ```\r\n *\r\n * @public\r\n */\nfunction deleteApp(_x) {\n  return _deleteApp.apply(this, arguments);\n}\n/**\r\n * Registers a library's name and version for platform logging purposes.\r\n * @param library - Name of 1p or 3p library (e.g. firestore, angularfire)\r\n * @param version - Current version of that library.\r\n * @param variant - Bundle variant, e.g., node, rn, etc.\r\n *\r\n * @public\r\n */\nfunction _deleteApp() {\n  _deleteApp = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee7(app) {\n    var cleanupProviders, name, firebaseServerApp;\n    return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n      while (1) switch (_context7.prev = _context7.next) {\n        case 0:\n          cleanupProviders = false;\n          name = app.name;\n          if (_apps.has(name)) {\n            cleanupProviders = true;\n            _apps[\"delete\"](name);\n          } else if (_serverApps.has(name)) {\n            firebaseServerApp = app;\n            if (firebaseServerApp.decRefCount() <= 0) {\n              _serverApps[\"delete\"](name);\n              cleanupProviders = true;\n            }\n          }\n          if (!cleanupProviders) {\n            _context7.next = 7;\n            break;\n          }\n          _context7.next = 6;\n          return Promise.all(app.container.getProviders().map(function (provider) {\n            return provider[\"delete\"]();\n          }));\n        case 6:\n          app.isDeleted = true;\n        case 7:\n        case \"end\":\n          return _context7.stop();\n      }\n    }, _callee7);\n  }));\n  return _deleteApp.apply(this, arguments);\n}\nfunction registerVersion(libraryKeyOrName, version, variant) {\n  var _a;\n  // TODO: We can use this check to whitelist strings when/if we set up\n  // a good whitelist system.\n  var library = (_a = PLATFORM_LOG_STRING[libraryKeyOrName]) !== null && _a !== void 0 ? _a : libraryKeyOrName;\n  if (variant) {\n    library += \"-\".concat(variant);\n  }\n  var libraryMismatch = library.match(/\\s|\\//);\n  var versionMismatch = version.match(/\\s|\\//);\n  if (libraryMismatch || versionMismatch) {\n    var warning = [\"Unable to register library \\\"\".concat(library, \"\\\" with version \\\"\").concat(version, \"\\\":\")];\n    if (libraryMismatch) {\n      warning.push(\"library name \\\"\".concat(library, \"\\\" contains illegal characters (whitespace or \\\"/\\\")\"));\n    }\n    if (libraryMismatch && versionMismatch) {\n      warning.push('and');\n    }\n    if (versionMismatch) {\n      warning.push(\"version name \\\"\".concat(version, \"\\\" contains illegal characters (whitespace or \\\"/\\\")\"));\n    }\n    logger.warn(warning.join(' '));\n    return;\n  }\n  _registerComponent(new Component(\"\".concat(library, \"-version\"), function () {\n    return {\n      library: library,\n      version: version\n    };\n  }, \"VERSION\" /* ComponentType.VERSION */));\n}\n/**\r\n * Sets log handler for all Firebase SDKs.\r\n * @param logCallback - An optional custom log handler that executes user code whenever\r\n * the Firebase SDK makes a logging call.\r\n *\r\n * @public\r\n */\nfunction onLog(logCallback, options) {\n  if (logCallback !== null && typeof logCallback !== 'function') {\n    throw ERROR_FACTORY.create(\"invalid-log-argument\" /* AppError.INVALID_LOG_ARGUMENT */);\n  }\n  setUserLogHandler(logCallback, options);\n}\n/**\r\n * Sets log level for all Firebase SDKs.\r\n *\r\n * All of the log types above the current log level are captured (i.e. if\r\n * you set the log level to `info`, errors are logged, but `debug` and\r\n * `verbose` logs are not).\r\n *\r\n * @public\r\n */\nfunction setLogLevel(logLevel) {\n  setLogLevel$1(logLevel);\n}\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar DB_NAME = 'firebase-heartbeat-database';\nvar DB_VERSION = 1;\nvar STORE_NAME = 'firebase-heartbeat-store';\nvar dbPromise = null;\nfunction getDbPromise() {\n  if (!dbPromise) {\n    dbPromise = openDB(DB_NAME, DB_VERSION, {\n      upgrade: function upgrade(db, oldVersion) {\n        // We don't use 'break' in this switch statement, the fall-through\n        // behavior is what we want, because if there are multiple versions between\n        // the old version and the current version, we want ALL the migrations\n        // that correspond to those versions to run, not only the last one.\n        // eslint-disable-next-line default-case\n        switch (oldVersion) {\n          case 0:\n            try {\n              db.createObjectStore(STORE_NAME);\n            } catch (e) {\n              // Safari/iOS browsers throw occasional exceptions on\n              // db.createObjectStore() that may be a bug. Avoid blocking\n              // the rest of the app functionality.\n              console.warn(e);\n            }\n        }\n      }\n    })[\"catch\"](function (e) {\n      throw ERROR_FACTORY.create(\"idb-open\" /* AppError.IDB_OPEN */, {\n        originalErrorMessage: e.message\n      });\n    });\n  }\n  return dbPromise;\n}\nfunction readHeartbeatsFromIndexedDB(_x2) {\n  return _readHeartbeatsFromIndexedDB.apply(this, arguments);\n}\nfunction _readHeartbeatsFromIndexedDB() {\n  _readHeartbeatsFromIndexedDB = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee8(app) {\n    var db, tx, result, idbGetError;\n    return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n      while (1) switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.prev = 0;\n          _context8.next = 3;\n          return getDbPromise();\n        case 3:\n          db = _context8.sent;\n          tx = db.transaction(STORE_NAME);\n          _context8.next = 7;\n          return tx.objectStore(STORE_NAME).get(computeKey(app));\n        case 7:\n          result = _context8.sent;\n          _context8.next = 10;\n          return tx.done;\n        case 10:\n          return _context8.abrupt(\"return\", result);\n        case 13:\n          _context8.prev = 13;\n          _context8.t0 = _context8[\"catch\"](0);\n          if (_context8.t0 instanceof FirebaseError) {\n            logger.warn(_context8.t0.message);\n          } else {\n            idbGetError = ERROR_FACTORY.create(\"idb-get\" /* AppError.IDB_GET */, {\n              originalErrorMessage: _context8.t0 === null || _context8.t0 === void 0 ? void 0 : _context8.t0.message\n            });\n            logger.warn(idbGetError.message);\n          }\n        case 16:\n        case \"end\":\n          return _context8.stop();\n      }\n    }, _callee8, null, [[0, 13]]);\n  }));\n  return _readHeartbeatsFromIndexedDB.apply(this, arguments);\n}\nfunction writeHeartbeatsToIndexedDB(_x3, _x4) {\n  return _writeHeartbeatsToIndexedDB.apply(this, arguments);\n}\nfunction _writeHeartbeatsToIndexedDB() {\n  _writeHeartbeatsToIndexedDB = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee9(app, heartbeatObject) {\n    var db, tx, objectStore, idbGetError;\n    return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n      while (1) switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.prev = 0;\n          _context9.next = 3;\n          return getDbPromise();\n        case 3:\n          db = _context9.sent;\n          tx = db.transaction(STORE_NAME, 'readwrite');\n          objectStore = tx.objectStore(STORE_NAME);\n          _context9.next = 8;\n          return objectStore.put(heartbeatObject, computeKey(app));\n        case 8:\n          _context9.next = 10;\n          return tx.done;\n        case 10:\n          _context9.next = 15;\n          break;\n        case 12:\n          _context9.prev = 12;\n          _context9.t0 = _context9[\"catch\"](0);\n          if (_context9.t0 instanceof FirebaseError) {\n            logger.warn(_context9.t0.message);\n          } else {\n            idbGetError = ERROR_FACTORY.create(\"idb-set\" /* AppError.IDB_WRITE */, {\n              originalErrorMessage: _context9.t0 === null || _context9.t0 === void 0 ? void 0 : _context9.t0.message\n            });\n            logger.warn(idbGetError.message);\n          }\n        case 15:\n        case \"end\":\n          return _context9.stop();\n      }\n    }, _callee9, null, [[0, 12]]);\n  }));\n  return _writeHeartbeatsToIndexedDB.apply(this, arguments);\n}\nfunction computeKey(app) {\n  return \"\".concat(app.name, \"!\").concat(app.options.appId);\n}\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar MAX_HEADER_BYTES = 1024;\n// 30 days\nvar STORED_HEARTBEAT_RETENTION_MAX_MILLIS = 30 * 24 * 60 * 60 * 1000;\nvar HeartbeatServiceImpl = /*#__PURE__*/function () {\n  function HeartbeatServiceImpl(container) {\n    var _this3 = this;\n    _classCallCheck(this, HeartbeatServiceImpl);\n    this.container = container;\n    /**\r\n     * In-memory cache for heartbeats, used by getHeartbeatsHeader() to generate\r\n     * the header string.\r\n     * Stores one record per date. This will be consolidated into the standard\r\n     * format of one record per user agent string before being sent as a header.\r\n     * Populated from indexedDB when the controller is instantiated and should\r\n     * be kept in sync with indexedDB.\r\n     * Leave public for easier testing.\r\n     */\n    this._heartbeatsCache = null;\n    var app = this.container.getProvider('app').getImmediate();\n    this._storage = new HeartbeatStorageImpl(app);\n    this._heartbeatsCachePromise = this._storage.read().then(function (result) {\n      _this3._heartbeatsCache = result;\n      return result;\n    });\n  }\n  /**\r\n   * Called to report a heartbeat. The function will generate\r\n   * a HeartbeatsByUserAgent object, update heartbeatsCache, and persist it\r\n   * to IndexedDB.\r\n   * Note that we only store one heartbeat per day. So if a heartbeat for today is\r\n   * already logged, subsequent calls to this function in the same day will be ignored.\r\n   */\n  return _createClass(HeartbeatServiceImpl, [{\n    key: \"triggerHeartbeat\",\n    value: (function () {\n      var _triggerHeartbeat = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var _a, _b, platformLogger, agent, date;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              platformLogger = this.container.getProvider('platform-logger').getImmediate(); // This is the \"Firebase user agent\" string from the platform logger\n              // service, not the browser user agent.\n              agent = platformLogger.getPlatformInfoString();\n              date = getUTCDateString();\n              if (!(((_a = this._heartbeatsCache) === null || _a === void 0 ? void 0 : _a.heartbeats) == null)) {\n                _context.next = 10;\n                break;\n              }\n              _context.next = 7;\n              return this._heartbeatsCachePromise;\n            case 7:\n              this._heartbeatsCache = _context.sent;\n              if (!(((_b = this._heartbeatsCache) === null || _b === void 0 ? void 0 : _b.heartbeats) == null)) {\n                _context.next = 10;\n                break;\n              }\n              return _context.abrupt(\"return\");\n            case 10:\n              if (!(this._heartbeatsCache.lastSentHeartbeatDate === date || this._heartbeatsCache.heartbeats.some(function (singleDateHeartbeat) {\n                return singleDateHeartbeat.date === date;\n              }))) {\n                _context.next = 14;\n                break;\n              }\n              return _context.abrupt(\"return\");\n            case 14:\n              // There is no entry for this date. Create one.\n              this._heartbeatsCache.heartbeats.push({\n                date: date,\n                agent: agent\n              });\n            case 15:\n              // Remove entries older than 30 days.\n              this._heartbeatsCache.heartbeats = this._heartbeatsCache.heartbeats.filter(function (singleDateHeartbeat) {\n                var hbTimestamp = new Date(singleDateHeartbeat.date).valueOf();\n                var now = Date.now();\n                return now - hbTimestamp <= STORED_HEARTBEAT_RETENTION_MAX_MILLIS;\n              });\n              return _context.abrupt(\"return\", this._storage.overwrite(this._heartbeatsCache));\n            case 19:\n              _context.prev = 19;\n              _context.t0 = _context[\"catch\"](0);\n              logger.warn(_context.t0);\n            case 22:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this, [[0, 19]]);\n      }));\n      function triggerHeartbeat() {\n        return _triggerHeartbeat.apply(this, arguments);\n      }\n      return triggerHeartbeat;\n    }()\n    /**\r\n     * Returns a base64 encoded string which can be attached to the heartbeat-specific header directly.\r\n     * It also clears all heartbeats from memory as well as in IndexedDB.\r\n     *\r\n     * NOTE: Consuming product SDKs should not send the header if this method\r\n     * returns an empty string.\r\n     */\n    )\n  }, {\n    key: \"getHeartbeatsHeader\",\n    value: (function () {\n      var _getHeartbeatsHeader = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var _a, date, _extractHeartbeatsFor, heartbeatsToSend, unsentEntries, headerString;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              if (!(this._heartbeatsCache === null)) {\n                _context2.next = 4;\n                break;\n              }\n              _context2.next = 4;\n              return this._heartbeatsCachePromise;\n            case 4:\n              if (!(((_a = this._heartbeatsCache) === null || _a === void 0 ? void 0 : _a.heartbeats) == null || this._heartbeatsCache.heartbeats.length === 0)) {\n                _context2.next = 6;\n                break;\n              }\n              return _context2.abrupt(\"return\", '');\n            case 6:\n              date = getUTCDateString(); // Extract as many heartbeats from the cache as will fit under the size limit.\n              _extractHeartbeatsFor = extractHeartbeatsForHeader(this._heartbeatsCache.heartbeats), heartbeatsToSend = _extractHeartbeatsFor.heartbeatsToSend, unsentEntries = _extractHeartbeatsFor.unsentEntries;\n              headerString = base64urlEncodeWithoutPadding(JSON.stringify({\n                version: 2,\n                heartbeats: heartbeatsToSend\n              })); // Store last sent date to prevent another being logged/sent for the same day.\n              this._heartbeatsCache.lastSentHeartbeatDate = date;\n              if (!(unsentEntries.length > 0)) {\n                _context2.next = 16;\n                break;\n              }\n              // Store any unsent entries if they exist.\n              this._heartbeatsCache.heartbeats = unsentEntries;\n              // This seems more likely than emptying the array (below) to lead to some odd state\n              // since the cache isn't empty and this will be called again on the next request,\n              // and is probably safest if we await it.\n              _context2.next = 14;\n              return this._storage.overwrite(this._heartbeatsCache);\n            case 14:\n              _context2.next = 18;\n              break;\n            case 16:\n              this._heartbeatsCache.heartbeats = [];\n              // Do not wait for this, to reduce latency.\n              void this._storage.overwrite(this._heartbeatsCache);\n            case 18:\n              return _context2.abrupt(\"return\", headerString);\n            case 21:\n              _context2.prev = 21;\n              _context2.t0 = _context2[\"catch\"](0);\n              logger.warn(_context2.t0);\n              return _context2.abrupt(\"return\", '');\n            case 25:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this, [[0, 21]]);\n      }));\n      function getHeartbeatsHeader() {\n        return _getHeartbeatsHeader.apply(this, arguments);\n      }\n      return getHeartbeatsHeader;\n    }())\n  }]);\n}();\nfunction getUTCDateString() {\n  var today = new Date();\n  // Returns date format 'YYYY-MM-DD'\n  return today.toISOString().substring(0, 10);\n}\nfunction extractHeartbeatsForHeader(heartbeatsCache) {\n  var maxSize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : MAX_HEADER_BYTES;\n  // Heartbeats grouped by user agent in the standard format to be sent in\n  // the header.\n  var heartbeatsToSend = [];\n  // Single date format heartbeats that are not sent.\n  var unsentEntries = heartbeatsCache.slice();\n  var _iterator5 = _createForOfIteratorHelper(heartbeatsCache),\n    _step5;\n  try {\n    var _loop = function _loop() {\n        var singleDateHeartbeat = _step5.value;\n        // Look for an existing entry with the same user agent.\n        var heartbeatEntry = heartbeatsToSend.find(function (hb) {\n          return hb.agent === singleDateHeartbeat.agent;\n        });\n        if (!heartbeatEntry) {\n          // If no entry for this user agent exists, create one.\n          heartbeatsToSend.push({\n            agent: singleDateHeartbeat.agent,\n            dates: [singleDateHeartbeat.date]\n          });\n          if (countBytes(heartbeatsToSend) > maxSize) {\n            // If the header would exceed max size, remove the added heartbeat\n            // entry and stop adding to the header.\n            heartbeatsToSend.pop();\n            return 0; // break\n          }\n        } else {\n          heartbeatEntry.dates.push(singleDateHeartbeat.date);\n          // If the header would exceed max size, remove the added date\n          // and stop adding to the header.\n          if (countBytes(heartbeatsToSend) > maxSize) {\n            heartbeatEntry.dates.pop();\n            return 0; // break\n          }\n        }\n        // Pop unsent entry from queue. (Skipped if adding the entry exceeded\n        // quota and the loop breaks early.)\n        unsentEntries = unsentEntries.slice(1);\n      },\n      _ret;\n    for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n      _ret = _loop();\n      if (_ret === 0) break;\n    }\n  } catch (err) {\n    _iterator5.e(err);\n  } finally {\n    _iterator5.f();\n  }\n  return {\n    heartbeatsToSend: heartbeatsToSend,\n    unsentEntries: unsentEntries\n  };\n}\nvar HeartbeatStorageImpl = /*#__PURE__*/function () {\n  function HeartbeatStorageImpl(app) {\n    _classCallCheck(this, HeartbeatStorageImpl);\n    this.app = app;\n    this._canUseIndexedDBPromise = this.runIndexedDBEnvironmentCheck();\n  }\n  return _createClass(HeartbeatStorageImpl, [{\n    key: \"runIndexedDBEnvironmentCheck\",\n    value: function () {\n      var _runIndexedDBEnvironmentCheck = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              if (isIndexedDBAvailable()) {\n                _context3.next = 4;\n                break;\n              }\n              return _context3.abrupt(\"return\", false);\n            case 4:\n              return _context3.abrupt(\"return\", validateIndexedDBOpenable().then(function () {\n                return true;\n              })[\"catch\"](function () {\n                return false;\n              }));\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3);\n      }));\n      function runIndexedDBEnvironmentCheck() {\n        return _runIndexedDBEnvironmentCheck.apply(this, arguments);\n      }\n      return runIndexedDBEnvironmentCheck;\n    }()\n    /**\r\n     * Read all heartbeats.\r\n     */\n  }, {\n    key: \"read\",\n    value: (function () {\n      var _read = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var canUseIndexedDB, idbHeartbeatObject;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return this._canUseIndexedDBPromise;\n            case 2:\n              canUseIndexedDB = _context4.sent;\n              if (canUseIndexedDB) {\n                _context4.next = 7;\n                break;\n              }\n              return _context4.abrupt(\"return\", {\n                heartbeats: []\n              });\n            case 7:\n              _context4.next = 9;\n              return readHeartbeatsFromIndexedDB(this.app);\n            case 9:\n              idbHeartbeatObject = _context4.sent;\n              if (!(idbHeartbeatObject === null || idbHeartbeatObject === void 0 ? void 0 : idbHeartbeatObject.heartbeats)) {\n                _context4.next = 14;\n                break;\n              }\n              return _context4.abrupt(\"return\", idbHeartbeatObject);\n            case 14:\n              return _context4.abrupt(\"return\", {\n                heartbeats: []\n              });\n            case 15:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, this);\n      }));\n      function read() {\n        return _read.apply(this, arguments);\n      }\n      return read;\n    }() // overwrite the storage with the provided heartbeats\n    )\n  }, {\n    key: \"overwrite\",\n    value: function () {\n      var _overwrite = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5(heartbeatsObject) {\n        var _a, canUseIndexedDB, existingHeartbeatsObject;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return this._canUseIndexedDBPromise;\n            case 2:\n              canUseIndexedDB = _context5.sent;\n              if (canUseIndexedDB) {\n                _context5.next = 7;\n                break;\n              }\n              return _context5.abrupt(\"return\");\n            case 7:\n              _context5.next = 9;\n              return this.read();\n            case 9:\n              existingHeartbeatsObject = _context5.sent;\n              return _context5.abrupt(\"return\", writeHeartbeatsToIndexedDB(this.app, {\n                lastSentHeartbeatDate: (_a = heartbeatsObject.lastSentHeartbeatDate) !== null && _a !== void 0 ? _a : existingHeartbeatsObject.lastSentHeartbeatDate,\n                heartbeats: heartbeatsObject.heartbeats\n              }));\n            case 11:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5, this);\n      }));\n      function overwrite(_x5) {\n        return _overwrite.apply(this, arguments);\n      }\n      return overwrite;\n    }() // add heartbeats\n  }, {\n    key: \"add\",\n    value: function () {\n      var _add = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee6(heartbeatsObject) {\n        var _a, canUseIndexedDB, existingHeartbeatsObject;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.next = 2;\n              return this._canUseIndexedDBPromise;\n            case 2:\n              canUseIndexedDB = _context6.sent;\n              if (canUseIndexedDB) {\n                _context6.next = 7;\n                break;\n              }\n              return _context6.abrupt(\"return\");\n            case 7:\n              _context6.next = 9;\n              return this.read();\n            case 9:\n              existingHeartbeatsObject = _context6.sent;\n              return _context6.abrupt(\"return\", writeHeartbeatsToIndexedDB(this.app, {\n                lastSentHeartbeatDate: (_a = heartbeatsObject.lastSentHeartbeatDate) !== null && _a !== void 0 ? _a : existingHeartbeatsObject.lastSentHeartbeatDate,\n                heartbeats: [].concat(_toConsumableArray(existingHeartbeatsObject.heartbeats), _toConsumableArray(heartbeatsObject.heartbeats))\n              }));\n            case 11:\n            case \"end\":\n              return _context6.stop();\n          }\n        }, _callee6, this);\n      }));\n      function add(_x6) {\n        return _add.apply(this, arguments);\n      }\n      return add;\n    }()\n  }]);\n}();\n/**\r\n * Calculate bytes of a HeartbeatsByUserAgent array after being wrapped\r\n * in a platform logging header JSON object, stringified, and converted\r\n * to base 64.\r\n */\nfunction countBytes(heartbeatsCache) {\n  // base64 has a restricted set of characters, all of which should be 1 byte.\n  return base64urlEncodeWithoutPadding(\n  // heartbeatsCache wrapper properties\n  JSON.stringify({\n    version: 2,\n    heartbeats: heartbeatsCache\n  })).length;\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction registerCoreComponents(variant) {\n  _registerComponent(new Component('platform-logger', function (container) {\n    return new PlatformLoggerServiceImpl(container);\n  }, \"PRIVATE\" /* ComponentType.PRIVATE */));\n  _registerComponent(new Component('heartbeat', function (container) {\n    return new HeartbeatServiceImpl(container);\n  }, \"PRIVATE\" /* ComponentType.PRIVATE */));\n  // Register `app` package.\n  registerVersion(name$q, version$1, variant);\n  // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\n  registerVersion(name$q, version$1, 'esm2017');\n  // Register platform SDK identifier (no version).\n  registerVersion('fire-js', '');\n}\n\n/**\r\n * Firebase App\r\n *\r\n * @remarks This package coordinates the communication between the different Firebase components\r\n * @packageDocumentation\r\n */\nregisterCoreComponents('');\nexport { SDK_VERSION, DEFAULT_ENTRY_NAME as _DEFAULT_ENTRY_NAME, _addComponent, _addOrOverwriteComponent, _apps, _clearComponents, _components, _getProvider, _isFirebaseApp, _isFirebaseServerApp, _registerComponent, _removeServiceInstance, _serverApps, deleteApp, getApp, getApps, initializeApp, initializeServerApp, onLog, registerVersion, setLogLevel };","map":{"version":3,"names":["PlatformLoggerServiceImpl","container","_classCallCheck","getPlatformInfoString","providers","getProviders","map","provider","isVersionServiceProvider","service","getImmediate","concat","library","version","filter","logString","join","component","getComponent","type","logger","Logger","DEFAULT_ENTRY_NAME","PLATFORM_LOG_STRING","_PLATFORM_LOG_STRING","_defineProperty","name$q","name$p","name$n","name$o","name$l","name$m","name$k","name$j","name$i","name$h","name$g","name$f","name$e","name$d","name$c","name$b","name$a","name$9","name$8","name$7","name$6","name$5","name$4","name$3","name$1","name$2","name","_apps","Map","_serverApps","_components","_addComponent","app","addComponent","e","debug","_addOrOverwriteComponent","addOrOverwriteComponent","_registerComponent","componentName","has","set","values","_step","_iterator","s","n","done","value","err","f","_iterator2","_createForOfIteratorHelper","_step2","serverApp","_getProvider","heartbeatController","getProvider","optional","triggerHeartbeat","_removeServiceInstance","instanceIdentifier","arguments","length","undefined","clearInstance","_isFirebaseApp","obj","options","_isFirebaseServerApp","settings","_clearComponents","clear","ERRORS","_ERRORS","ERROR_FACTORY","ErrorFactory","FirebaseAppImpl","config","_this","_isDeleted","_options","Object","assign","_config","_name","_automaticDataCollectionEnabled","automaticDataCollectionEnabled","_container","Component","_createClass","key","get","checkDestroyed","val","isDeleted","create","appName","FirebaseServerAppImpl","_FirebaseAppImpl","serverConfig","_this2","apiKey","_callSuper","appImpl","_serverConfig","_finalizationRegistry","FinalizationRegistry","automaticCleanup","_refCount","incRefCount","releaseOnDeref","registerVersion","version$1","_assertThisInitialized","_inherits","toJSON","register","decRefCount","deleteApp","SDK_VERSION","initializeApp","rawConfig","_typeof","String","getDefaultAppConfig","existingApp","deepEqual","ComponentContainer","_iterator3","_step3","newApp","initializeServerApp","_serverAppConfig","isBrowser","isWebWorker","appOptions","nameObj","hashCode","_toConsumableArray","reduce","hash","c","Math","imul","charCodeAt","nameString","JSON","stringify","_iterator4","_step4","getApp","getApps","Array","from","_x","_deleteApp","apply","_asyncToGenerator","_regeneratorRuntime","mark","_callee7","cleanupProviders","firebaseServerApp","wrap","_callee7$","_context7","prev","next","Promise","all","stop","libraryKeyOrName","variant","_a","libraryMismatch","match","versionMismatch","warning","push","warn","onLog","logCallback","setUserLogHandler","setLogLevel","logLevel","setLogLevel$1","DB_NAME","DB_VERSION","STORE_NAME","dbPromise","getDbPromise","openDB","upgrade","db","oldVersion","createObjectStore","console","originalErrorMessage","message","readHeartbeatsFromIndexedDB","_x2","_readHeartbeatsFromIndexedDB","_callee8","tx","result","idbGetError","_callee8$","_context8","sent","transaction","objectStore","computeKey","abrupt","t0","FirebaseError","writeHeartbeatsToIndexedDB","_x3","_x4","_writeHeartbeatsToIndexedDB","_callee9","heartbeatObject","_callee9$","_context9","put","appId","MAX_HEADER_BYTES","STORED_HEARTBEAT_RETENTION_MAX_MILLIS","HeartbeatServiceImpl","_this3","_heartbeatsCache","_storage","HeartbeatStorageImpl","_heartbeatsCachePromise","read","then","_triggerHeartbeat","_callee","_b","platformLogger","agent","date","_callee$","_context","getUTCDateString","heartbeats","lastSentHeartbeatDate","some","singleDateHeartbeat","hbTimestamp","Date","valueOf","now","overwrite","_getHeartbeatsHeader","_callee2","_extractHeartbeatsFor","heartbeatsToSend","unsentEntries","headerString","_callee2$","_context2","extractHeartbeatsForHeader","base64urlEncodeWithoutPadding","getHeartbeatsHeader","today","toISOString","substring","heartbeatsCache","maxSize","slice","_iterator5","_step5","_loop","heartbeatEntry","find","hb","dates","countBytes","pop","_ret","_canUseIndexedDBPromise","runIndexedDBEnvironmentCheck","_runIndexedDBEnvironmentCheck","_callee3","_callee3$","_context3","isIndexedDBAvailable","validateIndexedDBOpenable","_read","_callee4","canUseIndexedDB","idbHeartbeatObject","_callee4$","_context4","_callee5","heartbeatsObject","existingHeartbeatsObject","_callee5$","_context5","_x5","_overwrite","_callee6","_callee6$","_context6","add","_x6","_add","registerCoreComponents"],"sources":["../../src/platformLoggerService.ts","../../src/logger.ts","../../src/constants.ts","../../src/internal.ts","../../src/errors.ts","../../src/firebaseApp.ts","../../src/firebaseServerApp.ts","../../src/api.ts","../../src/indexeddb.ts","../../src/heartbeatService.ts","../../src/registerCoreComponents.ts","../../src/index.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ComponentContainer,\n  ComponentType,\n  Provider,\n  Name\n} from '@firebase/component';\nimport { PlatformLoggerService, VersionService } from './types';\n\nexport class PlatformLoggerServiceImpl implements PlatformLoggerService {\n  constructor(private readonly container: ComponentContainer) {}\n  // In initial implementation, this will be called by installations on\n  // auth token refresh, and installations will send this string.\n  getPlatformInfoString(): string {\n    const providers = this.container.getProviders();\n    // Loop through providers and get library/version pairs from any that are\n    // version components.\n    return providers\n      .map(provider => {\n        if (isVersionServiceProvider(provider)) {\n          const service = provider.getImmediate() as VersionService;\n          return `${service.library}/${service.version}`;\n        } else {\n          return null;\n        }\n      })\n      .filter(logString => logString)\n      .join(' ');\n  }\n}\n/**\n *\n * @param provider check if this provider provides a VersionService\n *\n * NOTE: Using Provider<'app-version'> is a hack to indicate that the provider\n * provides VersionService. The provider is not necessarily a 'app-version'\n * provider.\n */\nfunction isVersionServiceProvider(provider: Provider<Name>): boolean {\n  const component = provider.getComponent();\n  return component?.type === ComponentType.VERSION;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger } from '@firebase/logger';\n\nexport const logger = new Logger('@firebase/app');\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { name as appName } from '../package.json';\nimport { name as appCompatName } from '../../app-compat/package.json';\nimport { name as analyticsCompatName } from '../../../packages/analytics-compat/package.json';\nimport { name as analyticsName } from '../../../packages/analytics/package.json';\nimport { name as appCheckCompatName } from '../../../packages/app-check-compat/package.json';\nimport { name as appCheckName } from '../../../packages/app-check/package.json';\nimport { name as authName } from '../../../packages/auth/package.json';\nimport { name as authCompatName } from '../../../packages/auth-compat/package.json';\nimport { name as databaseName } from '../../../packages/database/package.json';\nimport { name as dataconnectName } from '../../../packages/data-connect/package.json';\nimport { name as databaseCompatName } from '../../../packages/database-compat/package.json';\nimport { name as functionsName } from '../../../packages/functions/package.json';\nimport { name as functionsCompatName } from '../../../packages/functions-compat/package.json';\nimport { name as installationsName } from '../../../packages/installations/package.json';\nimport { name as installationsCompatName } from '../../../packages/installations-compat/package.json';\nimport { name as messagingName } from '../../../packages/messaging/package.json';\nimport { name as messagingCompatName } from '../../../packages/messaging-compat/package.json';\nimport { name as performanceName } from '../../../packages/performance/package.json';\nimport { name as performanceCompatName } from '../../../packages/performance-compat/package.json';\nimport { name as remoteConfigName } from '../../../packages/remote-config/package.json';\nimport { name as remoteConfigCompatName } from '../../../packages/remote-config-compat/package.json';\nimport { name as storageName } from '../../../packages/storage/package.json';\nimport { name as storageCompatName } from '../../../packages/storage-compat/package.json';\nimport { name as firestoreName } from '../../../packages/firestore/package.json';\nimport { name as vertexName } from '../../../packages/vertexai/package.json';\nimport { name as firestoreCompatName } from '../../../packages/firestore-compat/package.json';\nimport { name as packageName } from '../../../packages/firebase/package.json';\n\n/**\n * The default app name\n *\n * @internal\n */\nexport const DEFAULT_ENTRY_NAME = '[DEFAULT]';\n\nexport const PLATFORM_LOG_STRING = {\n  [appName]: 'fire-core',\n  [appCompatName]: 'fire-core-compat',\n  [analyticsName]: 'fire-analytics',\n  [analyticsCompatName]: 'fire-analytics-compat',\n  [appCheckName]: 'fire-app-check',\n  [appCheckCompatName]: 'fire-app-check-compat',\n  [authName]: 'fire-auth',\n  [authCompatName]: 'fire-auth-compat',\n  [databaseName]: 'fire-rtdb',\n  [dataconnectName]: 'fire-data-connect',\n  [databaseCompatName]: 'fire-rtdb-compat',\n  [functionsName]: 'fire-fn',\n  [functionsCompatName]: 'fire-fn-compat',\n  [installationsName]: 'fire-iid',\n  [installationsCompatName]: 'fire-iid-compat',\n  [messagingName]: 'fire-fcm',\n  [messagingCompatName]: 'fire-fcm-compat',\n  [performanceName]: 'fire-perf',\n  [performanceCompatName]: 'fire-perf-compat',\n  [remoteConfigName]: 'fire-rc',\n  [remoteConfigCompatName]: 'fire-rc-compat',\n  [storageName]: 'fire-gcs',\n  [storageCompatName]: 'fire-gcs-compat',\n  [firestoreName]: 'fire-fst',\n  [firestoreCompatName]: 'fire-fst-compat',\n  [vertexName]: 'fire-vertex',\n  'fire-js': 'fire-js', // Platform identifier for JS SDK.\n  [packageName]: 'fire-js-all'\n} as const;\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseOptions,\n  FirebaseServerApp\n} from './public-types';\nimport { Component, Provider, Name } from '@firebase/component';\nimport { logger } from './logger';\nimport { DEFAULT_ENTRY_NAME } from './constants';\nimport { FirebaseAppImpl } from './firebaseApp';\nimport { FirebaseServerAppImpl } from './firebaseServerApp';\n\n/**\n * @internal\n */\nexport const _apps = new Map<string, FirebaseApp>();\n\n/**\n * @internal\n */\nexport const _serverApps = new Map<string, FirebaseServerApp>();\n\n/**\n * Registered components.\n *\n * @internal\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const _components = new Map<string, Component<any>>();\n\n/**\n * @param component - the component being added to this app's container\n *\n * @internal\n */\nexport function _addComponent<T extends Name>(\n  app: FirebaseApp,\n  component: Component<T>\n): void {\n  try {\n    (app as FirebaseAppImpl).container.addComponent(component);\n  } catch (e) {\n    logger.debug(\n      `Component ${component.name} failed to register with FirebaseApp ${app.name}`,\n      e\n    );\n  }\n}\n\n/**\n *\n * @internal\n */\nexport function _addOrOverwriteComponent(\n  app: FirebaseApp,\n  component: Component\n): void {\n  (app as FirebaseAppImpl).container.addOrOverwriteComponent(component);\n}\n\n/**\n *\n * @param component - the component to register\n * @returns whether or not the component is registered successfully\n *\n * @internal\n */\nexport function _registerComponent<T extends Name>(\n  component: Component<T>\n): boolean {\n  const componentName = component.name;\n  if (_components.has(componentName)) {\n    logger.debug(\n      `There were multiple attempts to register component ${componentName}.`\n    );\n\n    return false;\n  }\n\n  _components.set(componentName, component);\n\n  // add the component to existing app instances\n  for (const app of _apps.values()) {\n    _addComponent(app as FirebaseAppImpl, component);\n  }\n\n  for (const serverApp of _serverApps.values()) {\n    _addComponent(serverApp as FirebaseServerAppImpl, component);\n  }\n\n  return true;\n}\n\n/**\n *\n * @param app - FirebaseApp instance\n * @param name - service name\n *\n * @returns the provider for the service with the matching name\n *\n * @internal\n */\nexport function _getProvider<T extends Name>(\n  app: FirebaseApp,\n  name: T\n): Provider<T> {\n  const heartbeatController = (app as FirebaseAppImpl).container\n    .getProvider('heartbeat')\n    .getImmediate({ optional: true });\n  if (heartbeatController) {\n    void heartbeatController.triggerHeartbeat();\n  }\n  return (app as FirebaseAppImpl).container.getProvider(name);\n}\n\n/**\n *\n * @param app - FirebaseApp instance\n * @param name - service name\n * @param instanceIdentifier - service instance identifier in case the service supports multiple instances\n *\n * @internal\n */\nexport function _removeServiceInstance<T extends Name>(\n  app: FirebaseApp,\n  name: T,\n  instanceIdentifier: string = DEFAULT_ENTRY_NAME\n): void {\n  _getProvider(app, name).clearInstance(instanceIdentifier);\n}\n\n/**\n *\n * @param obj - an object of type FirebaseApp or FirebaseOptions.\n *\n * @returns true if the provide object is of type FirebaseApp.\n *\n * @internal\n */\nexport function _isFirebaseApp(\n  obj: FirebaseApp | FirebaseOptions\n): obj is FirebaseApp {\n  return (obj as FirebaseApp).options !== undefined;\n}\n\n/**\n *\n * @param obj - an object of type FirebaseApp.\n *\n * @returns true if the provided object is of type FirebaseServerAppImpl.\n *\n * @internal\n */\nexport function _isFirebaseServerApp(\n  obj: FirebaseApp | FirebaseServerApp\n): obj is FirebaseServerApp {\n  return (obj as FirebaseServerApp).settings !== undefined;\n}\n\n/**\n * Test only\n *\n * @internal\n */\nexport function _clearComponents(): void {\n  _components.clear();\n}\n\n/**\n * Exported in order to be used in app-compat package\n */\nexport { DEFAULT_ENTRY_NAME as _DEFAULT_ENTRY_NAME };\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorFactory, ErrorMap } from '@firebase/util';\n\nexport const enum AppError {\n  NO_APP = 'no-app',\n  BAD_APP_NAME = 'bad-app-name',\n  DUPLICATE_APP = 'duplicate-app',\n  APP_DELETED = 'app-deleted',\n  SERVER_APP_DELETED = 'server-app-deleted',\n  NO_OPTIONS = 'no-options',\n  INVALID_APP_ARGUMENT = 'invalid-app-argument',\n  INVALID_LOG_ARGUMENT = 'invalid-log-argument',\n  IDB_OPEN = 'idb-open',\n  IDB_GET = 'idb-get',\n  IDB_WRITE = 'idb-set',\n  IDB_DELETE = 'idb-delete',\n  FINALIZATION_REGISTRY_NOT_SUPPORTED = 'finalization-registry-not-supported',\n  INVALID_SERVER_APP_ENVIRONMENT = 'invalid-server-app-environment'\n}\n\nconst ERRORS: ErrorMap<AppError> = {\n  [AppError.NO_APP]:\n    \"No Firebase App '{$appName}' has been created - \" +\n    'call initializeApp() first',\n  [AppError.BAD_APP_NAME]: \"Illegal App name: '{$appName}'\",\n  [AppError.DUPLICATE_APP]:\n    \"Firebase App named '{$appName}' already exists with different options or config\",\n  [AppError.APP_DELETED]: \"Firebase App named '{$appName}' already deleted\",\n  [AppError.SERVER_APP_DELETED]: 'Firebase Server App has been deleted',\n  [AppError.NO_OPTIONS]:\n    'Need to provide options, when not being deployed to hosting via source.',\n  [AppError.INVALID_APP_ARGUMENT]:\n    'firebase.{$appName}() takes either no argument or a ' +\n    'Firebase App instance.',\n  [AppError.INVALID_LOG_ARGUMENT]:\n    'First argument to `onLog` must be null or a function.',\n  [AppError.IDB_OPEN]:\n    'Error thrown when opening IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.IDB_GET]:\n    'Error thrown when reading from IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.IDB_WRITE]:\n    'Error thrown when writing to IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.IDB_DELETE]:\n    'Error thrown when deleting from IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.FINALIZATION_REGISTRY_NOT_SUPPORTED]:\n    'FirebaseServerApp deleteOnDeref field defined but the JS runtime does not support FinalizationRegistry.',\n  [AppError.INVALID_SERVER_APP_ENVIRONMENT]:\n    'FirebaseServerApp is not for use in browser environments.'\n};\n\ninterface ErrorParams {\n  [AppError.NO_APP]: { appName: string };\n  [AppError.BAD_APP_NAME]: { appName: string };\n  [AppError.DUPLICATE_APP]: { appName: string };\n  [AppError.APP_DELETED]: { appName: string };\n  [AppError.INVALID_APP_ARGUMENT]: { appName: string };\n  [AppError.IDB_OPEN]: { originalErrorMessage?: string };\n  [AppError.IDB_GET]: { originalErrorMessage?: string };\n  [AppError.IDB_WRITE]: { originalErrorMessage?: string };\n  [AppError.IDB_DELETE]: { originalErrorMessage?: string };\n  [AppError.FINALIZATION_REGISTRY_NOT_SUPPORTED]: { appName?: string };\n}\n\nexport const ERROR_FACTORY = new ErrorFactory<AppError, ErrorParams>(\n  'app',\n  'Firebase',\n  ERRORS\n);\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseOptions,\n  FirebaseAppSettings\n} from './public-types';\nimport {\n  ComponentContainer,\n  Component,\n  ComponentType\n} from '@firebase/component';\nimport { ERROR_FACTORY, AppError } from './errors';\n\nexport class FirebaseAppImpl implements FirebaseApp {\n  protected readonly _options: FirebaseOptions;\n  protected readonly _name: string;\n  /**\n   * Original config values passed in as a constructor parameter.\n   * It is only used to compare with another config object to support idempotent initializeApp().\n   *\n   * Updating automaticDataCollectionEnabled on the App instance will not change its value in _config.\n   */\n  private readonly _config: Required<FirebaseAppSettings>;\n  private _automaticDataCollectionEnabled: boolean;\n  protected _isDeleted = false;\n  private readonly _container: ComponentContainer;\n\n  constructor(\n    options: FirebaseOptions,\n    config: Required<FirebaseAppSettings>,\n    container: ComponentContainer\n  ) {\n    this._options = { ...options };\n    this._config = { ...config };\n    this._name = config.name;\n    this._automaticDataCollectionEnabled =\n      config.automaticDataCollectionEnabled;\n    this._container = container;\n    this.container.addComponent(\n      new Component('app', () => this, ComponentType.PUBLIC)\n    );\n  }\n\n  get automaticDataCollectionEnabled(): boolean {\n    this.checkDestroyed();\n    return this._automaticDataCollectionEnabled;\n  }\n\n  set automaticDataCollectionEnabled(val: boolean) {\n    this.checkDestroyed();\n    this._automaticDataCollectionEnabled = val;\n  }\n\n  get name(): string {\n    this.checkDestroyed();\n    return this._name;\n  }\n\n  get options(): FirebaseOptions {\n    this.checkDestroyed();\n    return this._options;\n  }\n\n  get config(): Required<FirebaseAppSettings> {\n    this.checkDestroyed();\n    return this._config;\n  }\n\n  get container(): ComponentContainer {\n    return this._container;\n  }\n\n  get isDeleted(): boolean {\n    return this._isDeleted;\n  }\n\n  set isDeleted(val: boolean) {\n    this._isDeleted = val;\n  }\n\n  /**\n   * This function will throw an Error if the App has already been deleted -\n   * use before performing API actions on the App.\n   */\n  protected checkDestroyed(): void {\n    if (this.isDeleted) {\n      throw ERROR_FACTORY.create(AppError.APP_DELETED, { appName: this._name });\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseAppSettings,\n  FirebaseServerApp,\n  FirebaseServerAppSettings,\n  FirebaseOptions\n} from './public-types';\nimport { deleteApp, registerVersion } from './api';\nimport { ComponentContainer } from '@firebase/component';\nimport { FirebaseAppImpl } from './firebaseApp';\nimport { ERROR_FACTORY, AppError } from './errors';\nimport { name as packageName, version } from '../package.json';\n\nexport class FirebaseServerAppImpl\n  extends FirebaseAppImpl\n  implements FirebaseServerApp\n{\n  private readonly _serverConfig: FirebaseServerAppSettings;\n  private _finalizationRegistry: FinalizationRegistry<object> | null;\n  private _refCount: number;\n\n  constructor(\n    options: FirebaseOptions | FirebaseAppImpl,\n    serverConfig: FirebaseServerAppSettings,\n    name: string,\n    container: ComponentContainer\n  ) {\n    // Build configuration parameters for the FirebaseAppImpl base class.\n    const automaticDataCollectionEnabled =\n      serverConfig.automaticDataCollectionEnabled !== undefined\n        ? serverConfig.automaticDataCollectionEnabled\n        : false;\n\n    // Create the FirebaseAppSettings object for the FirebaseAppImp constructor.\n    const config: Required<FirebaseAppSettings> = {\n      name,\n      automaticDataCollectionEnabled\n    };\n\n    if ((options as FirebaseOptions).apiKey !== undefined) {\n      // Construct the parent FirebaseAppImp object.\n      super(options as FirebaseOptions, config, container);\n    } else {\n      const appImpl: FirebaseAppImpl = options as FirebaseAppImpl;\n      super(appImpl.options, config, container);\n    }\n\n    // Now construct the data for the FirebaseServerAppImpl.\n    this._serverConfig = {\n      automaticDataCollectionEnabled,\n      ...serverConfig\n    };\n\n    this._finalizationRegistry = null;\n    if (typeof FinalizationRegistry !== 'undefined') {\n      this._finalizationRegistry = new FinalizationRegistry(() => {\n        this.automaticCleanup();\n      });\n    }\n\n    this._refCount = 0;\n    this.incRefCount(this._serverConfig.releaseOnDeref);\n\n    // Do not retain a hard reference to the dref object, otherwise the FinalizationRegistry\n    // will never trigger.\n    this._serverConfig.releaseOnDeref = undefined;\n    serverConfig.releaseOnDeref = undefined;\n\n    registerVersion(packageName, version, 'serverapp');\n  }\n\n  toJSON(): undefined {\n    return undefined;\n  }\n\n  get refCount(): number {\n    return this._refCount;\n  }\n\n  // Increment the reference count of this server app. If an object is provided, register it\n  // with the finalization registry.\n  incRefCount(obj: object | undefined): void {\n    if (this.isDeleted) {\n      return;\n    }\n    this._refCount++;\n    if (obj !== undefined && this._finalizationRegistry !== null) {\n      this._finalizationRegistry.register(obj, this);\n    }\n  }\n\n  // Decrement the reference count.\n  decRefCount(): number {\n    if (this.isDeleted) {\n      return 0;\n    }\n    return --this._refCount;\n  }\n\n  // Invoked by the FinalizationRegistry callback to note that this app should go through its\n  // reference counts and delete itself if no reference count remain. The coordinating logic that\n  // handles this is in deleteApp(...).\n  private automaticCleanup(): void {\n    void deleteApp(this);\n  }\n\n  get settings(): FirebaseServerAppSettings {\n    this.checkDestroyed();\n    return this._serverConfig;\n  }\n\n  /**\n   * This function will throw an Error if the App has already been deleted -\n   * use before performing API actions on the App.\n   */\n  protected checkDestroyed(): void {\n    if (this.isDeleted) {\n      throw ERROR_FACTORY.create(AppError.SERVER_APP_DELETED);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseServerApp,\n  FirebaseOptions,\n  FirebaseAppSettings,\n  FirebaseServerAppSettings\n} from './public-types';\nimport { DEFAULT_ENTRY_NAME, PLATFORM_LOG_STRING } from './constants';\nimport { ERROR_FACTORY, AppError } from './errors';\nimport {\n  ComponentContainer,\n  Component,\n  Name,\n  ComponentType\n} from '@firebase/component';\nimport { version } from '../../firebase/package.json';\nimport { FirebaseAppImpl } from './firebaseApp';\nimport { FirebaseServerAppImpl } from './firebaseServerApp';\nimport {\n  _apps,\n  _components,\n  _isFirebaseApp,\n  _registerComponent,\n  _serverApps\n} from './internal';\nimport { logger } from './logger';\nimport {\n  LogLevelString,\n  setLogLevel as setLogLevelImpl,\n  LogCallback,\n  LogOptions,\n  setUserLogHandler\n} from '@firebase/logger';\nimport {\n  deepEqual,\n  getDefaultAppConfig,\n  isBrowser,\n  isWebWorker\n} from '@firebase/util';\n\nexport { FirebaseError } from '@firebase/util';\n\n/**\n * The current SDK version.\n *\n * @public\n */\nexport const SDK_VERSION = version;\n\n/**\n * Creates and initializes a {@link @firebase/app#FirebaseApp} instance.\n *\n * See\n * {@link\n *   https://firebase.google.com/docs/web/setup#add_firebase_to_your_app\n *   | Add Firebase to your app} and\n * {@link\n *   https://firebase.google.com/docs/web/setup#multiple-projects\n *   | Initialize multiple projects} for detailed documentation.\n *\n * @example\n * ```javascript\n *\n * // Initialize default app\n * // Retrieve your own options values by adding a web app on\n * // https://console.firebase.google.com\n * initializeApp({\n *   apiKey: \"AIza....\",                             // Auth / General Use\n *   authDomain: \"YOUR_APP.firebaseapp.com\",         // Auth with popup/redirect\n *   databaseURL: \"https://YOUR_APP.firebaseio.com\", // Realtime Database\n *   storageBucket: \"YOUR_APP.appspot.com\",          // Storage\n *   messagingSenderId: \"123456789\"                  // Cloud Messaging\n * });\n * ```\n *\n * @example\n * ```javascript\n *\n * // Initialize another app\n * const otherApp = initializeApp({\n *   databaseURL: \"https://<OTHER_DATABASE_NAME>.firebaseio.com\",\n *   storageBucket: \"<OTHER_STORAGE_BUCKET>.appspot.com\"\n * }, \"otherApp\");\n * ```\n *\n * @param options - Options to configure the app's services.\n * @param name - Optional name of the app to initialize. If no name\n *   is provided, the default is `\"[DEFAULT]\"`.\n *\n * @returns The initialized app.\n *\n * @public\n */\nexport function initializeApp(\n  options: FirebaseOptions,\n  name?: string\n): FirebaseApp;\n/**\n * Creates and initializes a FirebaseApp instance.\n *\n * @param options - Options to configure the app's services.\n * @param config - FirebaseApp Configuration\n *\n * @public\n */\nexport function initializeApp(\n  options: FirebaseOptions,\n  config?: FirebaseAppSettings\n): FirebaseApp;\n/**\n * Creates and initializes a FirebaseApp instance.\n *\n * @public\n */\nexport function initializeApp(): FirebaseApp;\nexport function initializeApp(\n  _options?: FirebaseOptions,\n  rawConfig = {}\n): FirebaseApp {\n  let options = _options;\n\n  if (typeof rawConfig !== 'object') {\n    const name = rawConfig;\n    rawConfig = { name };\n  }\n\n  const config: Required<FirebaseAppSettings> = {\n    name: DEFAULT_ENTRY_NAME,\n    automaticDataCollectionEnabled: false,\n    ...rawConfig\n  };\n  const name = config.name;\n\n  if (typeof name !== 'string' || !name) {\n    throw ERROR_FACTORY.create(AppError.BAD_APP_NAME, {\n      appName: String(name)\n    });\n  }\n\n  options ||= getDefaultAppConfig();\n\n  if (!options) {\n    throw ERROR_FACTORY.create(AppError.NO_OPTIONS);\n  }\n\n  const existingApp = _apps.get(name) as FirebaseAppImpl;\n  if (existingApp) {\n    // return the existing app if options and config deep equal the ones in the existing app.\n    if (\n      deepEqual(options, existingApp.options) &&\n      deepEqual(config, existingApp.config)\n    ) {\n      return existingApp;\n    } else {\n      throw ERROR_FACTORY.create(AppError.DUPLICATE_APP, { appName: name });\n    }\n  }\n\n  const container = new ComponentContainer(name);\n  for (const component of _components.values()) {\n    container.addComponent(component);\n  }\n\n  const newApp = new FirebaseAppImpl(options, config, container);\n\n  _apps.set(name, newApp);\n\n  return newApp;\n}\n\n/**\n * Creates and initializes a {@link @firebase/app#FirebaseServerApp} instance.\n *\n * The `FirebaseServerApp` is similar to `FirebaseApp`, but is intended for execution in\n * server side rendering environments only. Initialization will fail if invoked from a\n * browser environment.\n *\n * See\n * {@link\n *   https://firebase.google.com/docs/web/setup#add_firebase_to_your_app\n *   | Add Firebase to your app} and\n * {@link\n *   https://firebase.google.com/docs/web/setup#multiple-projects\n *   | Initialize multiple projects} for detailed documentation.\n *\n * @example\n * ```javascript\n *\n * // Initialize an instance of `FirebaseServerApp`.\n * // Retrieve your own options values by adding a web app on\n * // https://console.firebase.google.com\n * initializeServerApp({\n *     apiKey: \"AIza....\",                             // Auth / General Use\n *     authDomain: \"YOUR_APP.firebaseapp.com\",         // Auth with popup/redirect\n *     databaseURL: \"https://YOUR_APP.firebaseio.com\", // Realtime Database\n *     storageBucket: \"YOUR_APP.appspot.com\",          // Storage\n *     messagingSenderId: \"123456789\"                  // Cloud Messaging\n *   },\n *   {\n *    authIdToken: \"Your Auth ID Token\"\n *   });\n * ```\n *\n * @param options - `Firebase.AppOptions` to configure the app's services, or a\n *   a `FirebaseApp` instance which contains the `AppOptions` within.\n * @param config - `FirebaseServerApp` configuration.\n *\n * @returns The initialized `FirebaseServerApp`.\n *\n * @public\n */\nexport function initializeServerApp(\n  options: FirebaseOptions | FirebaseApp,\n  config: FirebaseServerAppSettings\n): FirebaseServerApp;\n\nexport function initializeServerApp(\n  _options: FirebaseOptions | FirebaseApp,\n  _serverAppConfig: FirebaseServerAppSettings\n): FirebaseServerApp {\n  if (isBrowser() && !isWebWorker()) {\n    // FirebaseServerApp isn't designed to be run in browsers.\n    throw ERROR_FACTORY.create(AppError.INVALID_SERVER_APP_ENVIRONMENT);\n  }\n\n  if (_serverAppConfig.automaticDataCollectionEnabled === undefined) {\n    _serverAppConfig.automaticDataCollectionEnabled = false;\n  }\n\n  let appOptions: FirebaseOptions;\n  if (_isFirebaseApp(_options)) {\n    appOptions = _options.options;\n  } else {\n    appOptions = _options;\n  }\n\n  // Build an app name based on a hash of the configuration options.\n  const nameObj = {\n    ..._serverAppConfig,\n    ...appOptions\n  };\n\n  // However, Do not mangle the name based on releaseOnDeref, since it will vary between the\n  // construction of FirebaseServerApp instances. For example, if the object is the request headers.\n  if (nameObj.releaseOnDeref !== undefined) {\n    delete nameObj.releaseOnDeref;\n  }\n\n  const hashCode = (s: string): number => {\n    return [...s].reduce(\n      (hash, c) => (Math.imul(31, hash) + c.charCodeAt(0)) | 0,\n      0\n    );\n  };\n\n  if (_serverAppConfig.releaseOnDeref !== undefined) {\n    if (typeof FinalizationRegistry === 'undefined') {\n      throw ERROR_FACTORY.create(\n        AppError.FINALIZATION_REGISTRY_NOT_SUPPORTED,\n        {}\n      );\n    }\n  }\n\n  const nameString = '' + hashCode(JSON.stringify(nameObj));\n  const existingApp = _serverApps.get(nameString) as FirebaseServerApp;\n  if (existingApp) {\n    (existingApp as FirebaseServerAppImpl).incRefCount(\n      _serverAppConfig.releaseOnDeref\n    );\n    return existingApp;\n  }\n\n  const container = new ComponentContainer(nameString);\n  for (const component of _components.values()) {\n    container.addComponent(component);\n  }\n\n  const newApp = new FirebaseServerAppImpl(\n    appOptions,\n    _serverAppConfig,\n    nameString,\n    container\n  );\n\n  _serverApps.set(nameString, newApp);\n\n  return newApp;\n}\n\n/**\n * Retrieves a {@link @firebase/app#FirebaseApp} instance.\n *\n * When called with no arguments, the default app is returned. When an app name\n * is provided, the app corresponding to that name is returned.\n *\n * An exception is thrown if the app being retrieved has not yet been\n * initialized.\n *\n * @example\n * ```javascript\n * // Return the default app\n * const app = getApp();\n * ```\n *\n * @example\n * ```javascript\n * // Return a named app\n * const otherApp = getApp(\"otherApp\");\n * ```\n *\n * @param name - Optional name of the app to return. If no name is\n *   provided, the default is `\"[DEFAULT]\"`.\n *\n * @returns The app corresponding to the provided app name.\n *   If no app name is provided, the default app is returned.\n *\n * @public\n */\nexport function getApp(name: string = DEFAULT_ENTRY_NAME): FirebaseApp {\n  const app = _apps.get(name);\n  if (!app && name === DEFAULT_ENTRY_NAME && getDefaultAppConfig()) {\n    return initializeApp();\n  }\n  if (!app) {\n    throw ERROR_FACTORY.create(AppError.NO_APP, { appName: name });\n  }\n\n  return app;\n}\n\n/**\n * A (read-only) array of all initialized apps.\n * @public\n */\nexport function getApps(): FirebaseApp[] {\n  return Array.from(_apps.values());\n}\n\n/**\n * Renders this app unusable and frees the resources of all associated\n * services.\n *\n * @example\n * ```javascript\n * deleteApp(app)\n *   .then(function() {\n *     console.log(\"App deleted successfully\");\n *   })\n *   .catch(function(error) {\n *     console.log(\"Error deleting app:\", error);\n *   });\n * ```\n *\n * @public\n */\nexport async function deleteApp(app: FirebaseApp): Promise<void> {\n  let cleanupProviders = false;\n  const name = app.name;\n  if (_apps.has(name)) {\n    cleanupProviders = true;\n    _apps.delete(name);\n  } else if (_serverApps.has(name)) {\n    const firebaseServerApp = app as FirebaseServerAppImpl;\n    if (firebaseServerApp.decRefCount() <= 0) {\n      _serverApps.delete(name);\n      cleanupProviders = true;\n    }\n  }\n\n  if (cleanupProviders) {\n    await Promise.all(\n      (app as FirebaseAppImpl).container\n        .getProviders()\n        .map(provider => provider.delete())\n    );\n    (app as FirebaseAppImpl).isDeleted = true;\n  }\n}\n\n/**\n * Registers a library's name and version for platform logging purposes.\n * @param library - Name of 1p or 3p library (e.g. firestore, angularfire)\n * @param version - Current version of that library.\n * @param variant - Bundle variant, e.g., node, rn, etc.\n *\n * @public\n */\nexport function registerVersion(\n  libraryKeyOrName: string,\n  version: string,\n  variant?: string\n): void {\n  // TODO: We can use this check to whitelist strings when/if we set up\n  // a good whitelist system.\n  let library = PLATFORM_LOG_STRING[libraryKeyOrName] ?? libraryKeyOrName;\n  if (variant) {\n    library += `-${variant}`;\n  }\n  const libraryMismatch = library.match(/\\s|\\//);\n  const versionMismatch = version.match(/\\s|\\//);\n  if (libraryMismatch || versionMismatch) {\n    const warning = [\n      `Unable to register library \"${library}\" with version \"${version}\":`\n    ];\n    if (libraryMismatch) {\n      warning.push(\n        `library name \"${library}\" contains illegal characters (whitespace or \"/\")`\n      );\n    }\n    if (libraryMismatch && versionMismatch) {\n      warning.push('and');\n    }\n    if (versionMismatch) {\n      warning.push(\n        `version name \"${version}\" contains illegal characters (whitespace or \"/\")`\n      );\n    }\n    logger.warn(warning.join(' '));\n    return;\n  }\n  _registerComponent(\n    new Component(\n      `${library}-version` as Name,\n      () => ({ library, version }),\n      ComponentType.VERSION\n    )\n  );\n}\n\n/**\n * Sets log handler for all Firebase SDKs.\n * @param logCallback - An optional custom log handler that executes user code whenever\n * the Firebase SDK makes a logging call.\n *\n * @public\n */\nexport function onLog(\n  logCallback: LogCallback | null,\n  options?: LogOptions\n): void {\n  if (logCallback !== null && typeof logCallback !== 'function') {\n    throw ERROR_FACTORY.create(AppError.INVALID_LOG_ARGUMENT);\n  }\n  setUserLogHandler(logCallback, options);\n}\n\n/**\n * Sets log level for all Firebase SDKs.\n *\n * All of the log types above the current log level are captured (i.e. if\n * you set the log level to `info`, errors are logged, but `debug` and\n * `verbose` logs are not).\n *\n * @public\n */\nexport function setLogLevel(logLevel: LogLevelString): void {\n  setLogLevelImpl(logLevel);\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseError } from '@firebase/util';\nimport { DBSchema, openDB, IDBPDatabase } from 'idb';\nimport { AppError, ERROR_FACTORY } from './errors';\nimport { FirebaseApp } from './public-types';\nimport { HeartbeatsInIndexedDB } from './types';\nimport { logger } from './logger';\n\nconst DB_NAME = 'firebase-heartbeat-database';\nconst DB_VERSION = 1;\nconst STORE_NAME = 'firebase-heartbeat-store';\n\ninterface AppDB extends DBSchema {\n  'firebase-heartbeat-store': {\n    key: string;\n    value: HeartbeatsInIndexedDB;\n  };\n}\n\nlet dbPromise: Promise<IDBPDatabase<AppDB>> | null = null;\nfunction getDbPromise(): Promise<IDBPDatabase<AppDB>> {\n  if (!dbPromise) {\n    dbPromise = openDB<AppDB>(DB_NAME, DB_VERSION, {\n      upgrade: (db, oldVersion) => {\n        // We don't use 'break' in this switch statement, the fall-through\n        // behavior is what we want, because if there are multiple versions between\n        // the old version and the current version, we want ALL the migrations\n        // that correspond to those versions to run, not only the last one.\n        // eslint-disable-next-line default-case\n        switch (oldVersion) {\n          case 0:\n            try {\n              db.createObjectStore(STORE_NAME);\n            } catch (e) {\n              // Safari/iOS browsers throw occasional exceptions on\n              // db.createObjectStore() that may be a bug. Avoid blocking\n              // the rest of the app functionality.\n              console.warn(e);\n            }\n        }\n      }\n    }).catch(e => {\n      throw ERROR_FACTORY.create(AppError.IDB_OPEN, {\n        originalErrorMessage: e.message\n      });\n    });\n  }\n  return dbPromise;\n}\n\nexport async function readHeartbeatsFromIndexedDB(\n  app: FirebaseApp\n): Promise<HeartbeatsInIndexedDB | undefined> {\n  try {\n    const db = await getDbPromise();\n    const tx = db.transaction(STORE_NAME);\n    const result = await tx.objectStore(STORE_NAME).get(computeKey(app));\n    // We already have the value but tx.done can throw,\n    // so we need to await it here to catch errors\n    await tx.done;\n    return result;\n  } catch (e) {\n    if (e instanceof FirebaseError) {\n      logger.warn(e.message);\n    } else {\n      const idbGetError = ERROR_FACTORY.create(AppError.IDB_GET, {\n        originalErrorMessage: (e as Error)?.message\n      });\n      logger.warn(idbGetError.message);\n    }\n  }\n}\n\nexport async function writeHeartbeatsToIndexedDB(\n  app: FirebaseApp,\n  heartbeatObject: HeartbeatsInIndexedDB\n): Promise<void> {\n  try {\n    const db = await getDbPromise();\n    const tx = db.transaction(STORE_NAME, 'readwrite');\n    const objectStore = tx.objectStore(STORE_NAME);\n    await objectStore.put(heartbeatObject, computeKey(app));\n    await tx.done;\n  } catch (e) {\n    if (e instanceof FirebaseError) {\n      logger.warn(e.message);\n    } else {\n      const idbGetError = ERROR_FACTORY.create(AppError.IDB_WRITE, {\n        originalErrorMessage: (e as Error)?.message\n      });\n      logger.warn(idbGetError.message);\n    }\n  }\n}\n\nfunction computeKey(app: FirebaseApp): string {\n  return `${app.name}!${app.options.appId}`;\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ComponentContainer } from '@firebase/component';\nimport {\n  base64urlEncodeWithoutPadding,\n  isIndexedDBAvailable,\n  validateIndexedDBOpenable\n} from '@firebase/util';\nimport {\n  readHeartbeatsFromIndexedDB,\n  writeHeartbeatsToIndexedDB\n} from './indexeddb';\nimport { FirebaseApp } from './public-types';\nimport {\n  HeartbeatsByUserAgent,\n  HeartbeatService,\n  HeartbeatsInIndexedDB,\n  HeartbeatStorage,\n  SingleDateHeartbeat\n} from './types';\nimport { logger } from './logger';\n\nconst MAX_HEADER_BYTES = 1024;\n// 30 days\nconst STORED_HEARTBEAT_RETENTION_MAX_MILLIS = 30 * 24 * 60 * 60 * 1000;\n\nexport class HeartbeatServiceImpl implements HeartbeatService {\n  /**\n   * The persistence layer for heartbeats\n   * Leave public for easier testing.\n   */\n  _storage: HeartbeatStorageImpl;\n\n  /**\n   * In-memory cache for heartbeats, used by getHeartbeatsHeader() to generate\n   * the header string.\n   * Stores one record per date. This will be consolidated into the standard\n   * format of one record per user agent string before being sent as a header.\n   * Populated from indexedDB when the controller is instantiated and should\n   * be kept in sync with indexedDB.\n   * Leave public for easier testing.\n   */\n  _heartbeatsCache: HeartbeatsInIndexedDB | null = null;\n\n  /**\n   * the initialization promise for populating heartbeatCache.\n   * If getHeartbeatsHeader() is called before the promise resolves\n   * (heartbeatsCache == null), it should wait for this promise\n   * Leave public for easier testing.\n   */\n  _heartbeatsCachePromise: Promise<HeartbeatsInIndexedDB>;\n  constructor(private readonly container: ComponentContainer) {\n    const app = this.container.getProvider('app').getImmediate();\n    this._storage = new HeartbeatStorageImpl(app);\n    this._heartbeatsCachePromise = this._storage.read().then(result => {\n      this._heartbeatsCache = result;\n      return result;\n    });\n  }\n\n  /**\n   * Called to report a heartbeat. The function will generate\n   * a HeartbeatsByUserAgent object, update heartbeatsCache, and persist it\n   * to IndexedDB.\n   * Note that we only store one heartbeat per day. So if a heartbeat for today is\n   * already logged, subsequent calls to this function in the same day will be ignored.\n   */\n  async triggerHeartbeat(): Promise<void> {\n    try {\n      const platformLogger = this.container\n        .getProvider('platform-logger')\n        .getImmediate();\n\n      // This is the \"Firebase user agent\" string from the platform logger\n      // service, not the browser user agent.\n      const agent = platformLogger.getPlatformInfoString();\n      const date = getUTCDateString();\n      if (this._heartbeatsCache?.heartbeats == null) {\n        this._heartbeatsCache = await this._heartbeatsCachePromise;\n        // If we failed to construct a heartbeats cache, then return immediately.\n        if (this._heartbeatsCache?.heartbeats == null) {\n          return;\n        }\n      }\n      // Do not store a heartbeat if one is already stored for this day\n      // or if a header has already been sent today.\n      if (\n        this._heartbeatsCache.lastSentHeartbeatDate === date ||\n        this._heartbeatsCache.heartbeats.some(\n          singleDateHeartbeat => singleDateHeartbeat.date === date\n        )\n      ) {\n        return;\n      } else {\n        // There is no entry for this date. Create one.\n        this._heartbeatsCache.heartbeats.push({ date, agent });\n      }\n      // Remove entries older than 30 days.\n      this._heartbeatsCache.heartbeats =\n        this._heartbeatsCache.heartbeats.filter(singleDateHeartbeat => {\n          const hbTimestamp = new Date(singleDateHeartbeat.date).valueOf();\n          const now = Date.now();\n          return now - hbTimestamp <= STORED_HEARTBEAT_RETENTION_MAX_MILLIS;\n        });\n      return this._storage.overwrite(this._heartbeatsCache);\n    } catch (e) {\n      logger.warn(e);\n    }\n  }\n\n  /**\n   * Returns a base64 encoded string which can be attached to the heartbeat-specific header directly.\n   * It also clears all heartbeats from memory as well as in IndexedDB.\n   *\n   * NOTE: Consuming product SDKs should not send the header if this method\n   * returns an empty string.\n   */\n  async getHeartbeatsHeader(): Promise<string> {\n    try {\n      if (this._heartbeatsCache === null) {\n        await this._heartbeatsCachePromise;\n      }\n      // If it's still null or the array is empty, there is no data to send.\n      if (\n        this._heartbeatsCache?.heartbeats == null ||\n        this._heartbeatsCache.heartbeats.length === 0\n      ) {\n        return '';\n      }\n      const date = getUTCDateString();\n      // Extract as many heartbeats from the cache as will fit under the size limit.\n      const { heartbeatsToSend, unsentEntries } = extractHeartbeatsForHeader(\n        this._heartbeatsCache.heartbeats\n      );\n      const headerString = base64urlEncodeWithoutPadding(\n        JSON.stringify({ version: 2, heartbeats: heartbeatsToSend })\n      );\n      // Store last sent date to prevent another being logged/sent for the same day.\n      this._heartbeatsCache.lastSentHeartbeatDate = date;\n      if (unsentEntries.length > 0) {\n        // Store any unsent entries if they exist.\n        this._heartbeatsCache.heartbeats = unsentEntries;\n        // This seems more likely than emptying the array (below) to lead to some odd state\n        // since the cache isn't empty and this will be called again on the next request,\n        // and is probably safest if we await it.\n        await this._storage.overwrite(this._heartbeatsCache);\n      } else {\n        this._heartbeatsCache.heartbeats = [];\n        // Do not wait for this, to reduce latency.\n        void this._storage.overwrite(this._heartbeatsCache);\n      }\n      return headerString;\n    } catch (e) {\n      logger.warn(e);\n      return '';\n    }\n  }\n}\n\nfunction getUTCDateString(): string {\n  const today = new Date();\n  // Returns date format 'YYYY-MM-DD'\n  return today.toISOString().substring(0, 10);\n}\n\nexport function extractHeartbeatsForHeader(\n  heartbeatsCache: SingleDateHeartbeat[],\n  maxSize = MAX_HEADER_BYTES\n): {\n  heartbeatsToSend: HeartbeatsByUserAgent[];\n  unsentEntries: SingleDateHeartbeat[];\n} {\n  // Heartbeats grouped by user agent in the standard format to be sent in\n  // the header.\n  const heartbeatsToSend: HeartbeatsByUserAgent[] = [];\n  // Single date format heartbeats that are not sent.\n  let unsentEntries = heartbeatsCache.slice();\n  for (const singleDateHeartbeat of heartbeatsCache) {\n    // Look for an existing entry with the same user agent.\n    const heartbeatEntry = heartbeatsToSend.find(\n      hb => hb.agent === singleDateHeartbeat.agent\n    );\n    if (!heartbeatEntry) {\n      // If no entry for this user agent exists, create one.\n      heartbeatsToSend.push({\n        agent: singleDateHeartbeat.agent,\n        dates: [singleDateHeartbeat.date]\n      });\n      if (countBytes(heartbeatsToSend) > maxSize) {\n        // If the header would exceed max size, remove the added heartbeat\n        // entry and stop adding to the header.\n        heartbeatsToSend.pop();\n        break;\n      }\n    } else {\n      heartbeatEntry.dates.push(singleDateHeartbeat.date);\n      // If the header would exceed max size, remove the added date\n      // and stop adding to the header.\n      if (countBytes(heartbeatsToSend) > maxSize) {\n        heartbeatEntry.dates.pop();\n        break;\n      }\n    }\n    // Pop unsent entry from queue. (Skipped if adding the entry exceeded\n    // quota and the loop breaks early.)\n    unsentEntries = unsentEntries.slice(1);\n  }\n  return {\n    heartbeatsToSend,\n    unsentEntries\n  };\n}\n\nexport class HeartbeatStorageImpl implements HeartbeatStorage {\n  private _canUseIndexedDBPromise: Promise<boolean>;\n  constructor(public app: FirebaseApp) {\n    this._canUseIndexedDBPromise = this.runIndexedDBEnvironmentCheck();\n  }\n  async runIndexedDBEnvironmentCheck(): Promise<boolean> {\n    if (!isIndexedDBAvailable()) {\n      return false;\n    } else {\n      return validateIndexedDBOpenable()\n        .then(() => true)\n        .catch(() => false);\n    }\n  }\n  /**\n   * Read all heartbeats.\n   */\n  async read(): Promise<HeartbeatsInIndexedDB> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return { heartbeats: [] };\n    } else {\n      const idbHeartbeatObject = await readHeartbeatsFromIndexedDB(this.app);\n      if (idbHeartbeatObject?.heartbeats) {\n        return idbHeartbeatObject;\n      } else {\n        return { heartbeats: [] };\n      }\n    }\n  }\n  // overwrite the storage with the provided heartbeats\n  async overwrite(heartbeatsObject: HeartbeatsInIndexedDB): Promise<void> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return;\n    } else {\n      const existingHeartbeatsObject = await this.read();\n      return writeHeartbeatsToIndexedDB(this.app, {\n        lastSentHeartbeatDate:\n          heartbeatsObject.lastSentHeartbeatDate ??\n          existingHeartbeatsObject.lastSentHeartbeatDate,\n        heartbeats: heartbeatsObject.heartbeats\n      });\n    }\n  }\n  // add heartbeats\n  async add(heartbeatsObject: HeartbeatsInIndexedDB): Promise<void> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return;\n    } else {\n      const existingHeartbeatsObject = await this.read();\n      return writeHeartbeatsToIndexedDB(this.app, {\n        lastSentHeartbeatDate:\n          heartbeatsObject.lastSentHeartbeatDate ??\n          existingHeartbeatsObject.lastSentHeartbeatDate,\n        heartbeats: [\n          ...existingHeartbeatsObject.heartbeats,\n          ...heartbeatsObject.heartbeats\n        ]\n      });\n    }\n  }\n}\n\n/**\n * Calculate bytes of a HeartbeatsByUserAgent array after being wrapped\n * in a platform logging header JSON object, stringified, and converted\n * to base 64.\n */\nexport function countBytes(heartbeatsCache: HeartbeatsByUserAgent[]): number {\n  // base64 has a restricted set of characters, all of which should be 1 byte.\n  return base64urlEncodeWithoutPadding(\n    // heartbeatsCache wrapper properties\n    JSON.stringify({ version: 2, heartbeats: heartbeatsCache })\n  ).length;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ComponentType } from '@firebase/component';\nimport { PlatformLoggerServiceImpl } from './platformLoggerService';\nimport { name, version } from '../package.json';\nimport { _registerComponent } from './internal';\nimport { registerVersion } from './api';\nimport { HeartbeatServiceImpl } from './heartbeatService';\n\nexport function registerCoreComponents(variant?: string): void {\n  _registerComponent(\n    new Component(\n      'platform-logger',\n      container => new PlatformLoggerServiceImpl(container),\n      ComponentType.PRIVATE\n    )\n  );\n  _registerComponent(\n    new Component(\n      'heartbeat',\n      container => new HeartbeatServiceImpl(container),\n      ComponentType.PRIVATE\n    )\n  );\n\n  // Register `app` package.\n  registerVersion(name, version, variant);\n  // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\n  registerVersion(name, version, '__BUILD_TARGET__');\n  // Register platform SDK identifier (no version).\n  registerVersion('fire-js', '');\n}\n","/**\n * Firebase App\n *\n * @remarks This package coordinates the communication between the different Firebase components\n * @packageDocumentation\n */\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { registerCoreComponents } from './registerCoreComponents';\n\nexport * from './api';\nexport * from './internal';\nexport * from './public-types';\n\nregisterCoreComponents('__RUNTIME_ENV__');\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;;AAeG;AAfH,IAyBaA,yBAAyB;EACpC,SAAAA,0BAA6BC,SAA6B;IAAAC,eAAA,OAAAF,yBAAA;IAA7B,IAAS,CAAAC,SAAA,GAATA,SAAS;;;;;;WAGtC,SAAAE,qBAAqBA,CAAA;MACnB,IAAMC,SAAS,GAAG,IAAI,CAACH,SAAS,CAACI,YAAY,EAAE;;;MAG/C,OAAOD,SAAS,CACbE,GAAG,CAAC,UAAAC,QAAQ,EAAG;QACd,IAAIC,wBAAwB,CAACD,QAAQ,CAAC,EAAE;UACtC,IAAME,OAAO,GAAGF,QAAQ,CAACG,YAAY,EAAoB;UACzD,UAAAC,MAAA,CAAUF,OAAO,CAACG,OAAO,OAAAD,MAAA,CAAIF,OAAO,CAACI,OAAO;QAC7C,OAAM;UACL,OAAO,IAAI;QACZ;MACH,CAAC,CAAC,CACDC,MAAM,CAAC,UAAAC,SAAS;QAAA,OAAIA,SAAS;MAAA,EAAC,CAC9BC,IAAI,CAAC,GAAG,CAAC;;EACb;AAAA;AAEH;;;;;;;AAOG;AACH,SAASR,wBAAwBA,CAACD,QAAwB;EACxD,IAAMU,SAAS,GAAGV,QAAQ,CAACW,YAAY,EAAE;EACzC,OAAO,CAAAD,SAAS,KAAT,QAAAA,SAAS,uBAATA,SAAS,CAAEE,IAAI;AACxB;;;;ACzDA;;;;;;;;;;;;;;;AAeG;AAII,IAAMC,MAAM,GAAG,IAAIC,MAAM,CAAC,eAAe,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnBjD;;;;;;;;;;;;;;;AAeG;AA8BH;;;;AAIG;AACI,IAAMC,kBAAkB,GAAG;AAE3B,IAAMC,mBAAmB,IAAAC,oBAAA,OAAAC,eAAA,CAAAA,eAAA,CAAAA,eAAA,CAAAA,eAAA,CAAAA,eAAA,CAAAA,eAAA,CAAAA,eAAA,CAAAA,eAAA,CAAAA,eAAA,CAAAA,eAAA,CAAAD,oBAAA,EAC7BE,MAAO,EAAG,WAAW,GACrBC,MAAa,EAAG,kBAAkB,GAClCC,MAAa,EAAG,gBAAgB,GAChCC,MAAmB,EAAG,uBAAuB,GAC7CC,MAAY,EAAG,gBAAgB,GAC/BC,MAAkB,EAAG,uBAAuB,GAC5CC,MAAQ,EAAG,WAAW,GACtBC,MAAc,EAAG,kBAAkB,GACnCC,MAAY,EAAG,WAAW,GAC1BC,MAAe,EAAG,mBAAmB,GAAAV,eAAA,CAAAA,eAAA,CAAAA,eAAA,CAAAA,eAAA,CAAAA,eAAA,CAAAA,eAAA,CAAAA,eAAA,CAAAA,eAAA,CAAAA,eAAA,CAAAA,eAAA,CAAAD,oBAAA,EACrCY,MAAkB,EAAG,kBAAkB,GACvCC,MAAa,EAAG,SAAS,GACzBC,MAAmB,EAAG,gBAAgB,GACtCC,MAAiB,EAAG,UAAU,GAC9BC,MAAuB,EAAG,iBAAiB,GAC3CC,MAAa,EAAG,UAAU,GAC1BC,MAAmB,EAAG,iBAAiB,GACvCC,MAAe,EAAG,WAAW,GAC7BC,MAAqB,EAAG,kBAAkB,GAC1CC,MAAgB,EAAG,SAAS,GAAApB,eAAA,CAAAA,eAAA,CAAAA,eAAA,CAAAA,eAAA,CAAAA,eAAA,CAAAA,eAAA,CAAAA,eAAA,CAAAA,eAAA,CAAAD,oBAAA,EAC5BsB,MAAsB,EAAG,gBAAgB,GACzCC,MAAW,EAAG,UAAU,GACxBC,MAAiB,EAAG,iBAAiB,GACrCC,MAAa,EAAG,UAAU,GAC1BC,MAAmB,EAAG,iBAAiB,GACvCC,MAAU,EAAG,aAAa,GAC3B,SAAS,EAAE,SAAS,GACnBC,IAAW,EAAG,aAAa,EACpB;;ACjFV;;;;;;;;;;;;;;;AAeG;AAaH;;AAEG;AACU,IAAAC,KAAK,GAAG,IAAIC,GAAG;AAE5B;;AAEG;AACU,IAAAC,WAAW,GAAG,IAAID,GAAG;AAElC;;;;AAIG;AACH;AACa,IAAAE,WAAW,GAAG,IAAIF,GAAG;AAElC;;;;AAIG;AACa,SAAAG,aAAaA,CAC3BC,GAAgB,EAChBzC,SAAuB;EAEvB,IAAI;IACDyC,GAAuB,CAACzD,SAAS,CAAC0D,YAAY,CAAC1C,SAAS,CAAC;EAC3D,EAAC,OAAO2C,CAAC,EAAE;IACVxC,MAAM,CAACyC,KAAK,cAAAlD,MAAA,CACGM,SAAS,CAACmC,IAAI,2CAAAzC,MAAA,CAAwC+C,GAAG,CAACN,IAAI,GAC3EQ,CAAC,CACF;EACF;AACH;AAEA;;;AAGG;AACa,SAAAE,wBAAwBA,CACtCJ,GAAgB,EAChBzC,SAAoB;EAEnByC,GAAuB,CAACzD,SAAS,CAAC8D,uBAAuB,CAAC9C,SAAS,CAAC;AACvE;AAEA;;;;;;AAMG;AACG,SAAU+C,kBAAkBA,CAChC/C,SAAuB;EAEvB,IAAMgD,aAAa,GAAGhD,SAAS,CAACmC,IAAI;EACpC,IAAII,WAAW,CAACU,GAAG,CAACD,aAAa,CAAC,EAAE;IAClC7C,MAAM,CAACyC,KAAK,uDAAAlD,MAAA,CAC4CsD,aAAa,MAAG,CACvE;IAED,OAAO,KAAK;EACb;EAEDT,WAAW,CAACW,GAAG,CAACF,aAAa,EAAEhD,SAAS,CAAC;;6CAGvBoC,KAAK,CAACe,MAAM,EAAE;IAAAC,KAAA;EAAA;IAAhC,KAAAC,SAAA,CAAAC,CAAA,MAAAF,KAAA,GAAAC,SAAA,CAAAE,CAAA,IAAAC,IAAA,GAAkC;MAAA,IAAvBf,GAAG,GAAAW,KAAA,CAAAK,KAAA;MACZjB,aAAa,CAACC,GAAsB,EAAEzC,SAAS,CAAC;IACjD;EAAA,SAAA0D,GAAA;IAAAL,SAAA,CAAAV,CAAA,CAAAe,GAAA;EAAA;IAAAL,SAAA,CAAAM,CAAA;EAAA;EAAA,IAAAC,UAAA,GAAAC,0BAAA,CAEuBvB,WAAW,CAACa,MAAM,EAAE;IAAAW,MAAA;EAAA;IAA5C,KAAAF,UAAA,CAAAN,CAAA,MAAAQ,MAAA,GAAAF,UAAA,CAAAL,CAAA,IAAAC,IAAA,GAA8C;MAAA,IAAnCO,SAAS,GAAAD,MAAA,CAAAL,KAAA;MAClBjB,aAAa,CAACuB,SAAkC,EAAE/D,SAAS,CAAC;IAC7D;EAAA,SAAA0D,GAAA;IAAAE,UAAA,CAAAjB,CAAA,CAAAe,GAAA;EAAA;IAAAE,UAAA,CAAAD,CAAA;EAAA;EAED,OAAO,IAAI;AACb;AAEA;;;;;;;;AAQG;AACa,SAAAK,YAAYA,CAC1BvB,GAAgB,EAChBN,IAAO;EAEP,IAAM8B,mBAAmB,GAAIxB,GAAuB,CAACzD,SAAS,CAC3DkF,WAAW,CAAC,WAAW,CAAC,CACxBzE,YAAY,CAAC;IAAE0E,QAAQ,EAAE;EAAI,CAAE,CAAC;EACnC,IAAIF,mBAAmB,EAAE;IACvB,KAAKA,mBAAmB,CAACG,gBAAgB,EAAE;EAC5C;EACD,OAAQ3B,GAAuB,CAACzD,SAAS,CAACkF,WAAW,CAAC/B,IAAI,CAAC;AAC7D;AAEA;;;;;;;AAOG;AACG,SAAUkC,sBAAsBA,CACpC5B,GAAgB,EAChBN,IAAO,EACwC;EAAA,IAA/CmC,kBAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAA6BlE,kBAAkB;EAE/C2D,YAAY,CAACvB,GAAG,EAAEN,IAAI,CAAC,CAACuC,aAAa,CAACJ,kBAAkB,CAAC;AAC3D;AAEA;;;;;;;AAOG;AACG,SAAUK,cAAcA,CAC5BC,GAAkC;EAElC,OAAQA,GAAmB,CAACC,OAAO,KAAKJ,SAAS;AACnD;AAEA;;;;;;;AAOG;AACG,SAAUK,oBAAoBA,CAClCF,GAAoC;EAEpC,OAAQA,GAAyB,CAACG,QAAQ,KAAKN,SAAS;AAC1D;AAEA;;;;AAIG;SACaO,gBAAgBA,CAAA;EAC9BzC,WAAW,CAAC0C,KAAK,EAAE;AACrB;;ACtLA;;;;;;;;;;;;;;;AAeG;AAqBH,IAAMC,MAAM,IAAAC,OAAA,OAAA3E,eAAA,CAAAA,eAAA,CAAAA,eAAA,CAAAA,eAAA,CAAAA,eAAA,CAAAA,eAAA,CAAAA,eAAA,CAAAA,eAAA,CAAAA,eAAA,CAAAA,eAAA,CAAA2E,OAAA,EACV,gCACE,kDAAkD,GAClD,4BAA4B,GAC9B,4CAAyB,gCAAgC,GACzD,8CACE,iFAAiF,GACnF,0CAAwB,iDAAiD,GACzE,wDAA+B,sCAAsC,GACrE,wCACE,yEAAyE,GAC3E,4DACE,sDAAsD,GACtD,wBAAwB,GAC1B,4DACE,uDAAuD,GACzD,oCACE,+EAA+E,GACjF,kCACE,oFAAoF,GAAA3E,eAAA,CAAAA,eAAA,CAAAA,eAAA,CAAAA,eAAA,CAAA2E,OAAA,EACtF,oCACE,kFAAkF,GACpF,wCACE,qFAAqF,GACvF,0FACE,yGAAyG,GAC3G,gFACE,2DAA2D,EAC9D;AAeM,IAAMC,aAAa,GAAG,IAAIC,YAAY,CAC3C,KAAK,EACL,UAAU,EACVH,MAAM,CACP;;ACnFD;;;;;;;;;;;;;;;AAeG;AAfH,IA6BaI,eAAe;EAc1B,SAAAA,gBACET,OAAwB,EACxBU,MAAqC,EACrCvG,SAA6B;IAAA,IAAAwG,KAAA;IAAAvG,eAAA,OAAAqG,eAAA;IANrB,IAAU,CAAAG,UAAA,GAAG,KAAK;IAQ1B,IAAI,CAACC,QAAQ,GAAQC,MAAA,CAAAC,MAAA,KAAAf,OAAO,CAAE;IAC9B,IAAI,CAACgB,OAAO,GAAQF,MAAA,CAAAC,MAAA,KAAAL,MAAM,CAAE;IAC5B,IAAI,CAACO,KAAK,GAAGP,MAAM,CAACpD,IAAI;IACxB,IAAI,CAAC4D,+BAA+B,GAClCR,MAAM,CAACS,8BAA8B;IACvC,IAAI,CAACC,UAAU,GAAGjH,SAAS;IAC3B,IAAI,CAACA,SAAS,CAAC0D,YAAY,CACzB,IAAIwD,SAAS,CAAC,KAAK,EAAE;MAAA,OAAMV,KAAI;IAAA,uCAAuB,CACvD;;EACF,OAAAW,YAAA,CAAAb,eAAA;IAAAc,GAAA;IAAAC,GAAA,EAED,SAAAA,IAAA,EAAkC;MAChC,IAAI,CAACC,cAAc,EAAE;MACrB,OAAO,IAAI,CAACP,+BAA+B;KAC5C;IAAA7C,GAAA,EAED,SAAAA,IAAmCqD,GAAY;MAC7C,IAAI,CAACD,cAAc,EAAE;MACrB,IAAI,CAACP,+BAA+B,GAAGQ,GAAG;;EAC3C;IAAAH,GAAA;IAAAC,GAAA,EAED,SAAAA,IAAA,EAAQ;MACN,IAAI,CAACC,cAAc,EAAE;MACrB,OAAO,IAAI,CAACR,KAAK;;EAClB;IAAAM,GAAA;IAAAC,GAAA,EAED,SAAAA,IAAA,EAAW;MACT,IAAI,CAACC,cAAc,EAAE;MACrB,OAAO,IAAI,CAACZ,QAAQ;;EACrB;IAAAU,GAAA;IAAAC,GAAA,EAED,SAAAA,IAAA,EAAU;MACR,IAAI,CAACC,cAAc,EAAE;MACrB,OAAO,IAAI,CAACT,OAAO;;EACpB;IAAAO,GAAA;IAAAC,GAAA,EAED,SAAAA,IAAA,EAAa;MACX,OAAO,IAAI,CAACJ,UAAU;;EACvB;IAAAG,GAAA;IAAAC,GAAA,EAED,SAAAA,IAAA,EAAa;MACX,OAAO,IAAI,CAACZ,UAAU;KACvB;IAAAvC,GAAA,EAED,SAAAA,IAAcqD,GAAY;MACxB,IAAI,CAACd,UAAU,GAAGc,GAAG;;IAGvB;;;AAGG;EAHH;IAAAH,GAAA;IAAA3C,KAAA,EAIU,SAAA6C,cAAcA,CAAA;MACtB,IAAI,IAAI,CAACE,SAAS,EAAE;QAClB,MAAMpB,aAAa,CAACqB,MAAM,2CAAuB;UAAEC,OAAO,EAAE,IAAI,CAACZ;QAAK,CAAE,CAAC;MAC1E;;EACF;AAAA;ACxGH;;;;;;;;;;;;;;;AAeG;AAfH,IA6Baa,qBACX,0BAAAC,gBAAA;EAOA,SAAAD,sBACE9B,OAA0C,EAC1CgC,YAAuC,EACvC1E,IAAY,EACZnD,SAA6B;IAAA,IAAA8H,MAAA;IAAA7H,eAAA,OAAA0H,qBAAA;;IAG7B,IAAMX,8BAA8B,GAClCa,YAAY,CAACb,8BAA8B,KAAKvB,SAAS,GACrDoC,YAAY,CAACb,8BAA8B,GAC3C,KAAK;;IAGX,IAAMT,MAAM,GAAkC;MAC5CpD,IAAI,EAAJA,IAAI;MACJ6D,8BAA8B,EAA9BA;KACD;IAED,IAAKnB,OAA2B,CAACkC,MAAM,KAAKtC,SAAS,EAAE;;MAErDqC,MAAA,GAAAE,UAAA,OAAAL,qBAAA,GAAM9B,OAA0B,EAAEU,MAAM,EAAEvG,SAAS;IACpD,OAAM;MACL,IAAMiI,OAAO,GAAoBpC,OAA0B;MAC3DiC,MAAA,GAAAE,UAAA,OAAAL,qBAAA,GAAMM,OAAO,CAACpC,OAAO,EAAEU,MAAM,EAAEvG,SAAS;IACzC;;IAGD8H,MAAA,CAAKI,aAAa,GAAAvB,MAAA,CAAAC,MAAA;MAChBI,8BAA8B,EAA9BA;IAA8B,CAC3B,EAAAa,YAAY,CAChB;IAEDC,MAAA,CAAKK,qBAAqB,GAAG,IAAI;IACjC,IAAI,OAAOC,oBAAoB,KAAK,WAAW,EAAE;MAC/CN,MAAA,CAAKK,qBAAqB,GAAG,IAAIC,oBAAoB,CAAC,YAAK;QACzDN,MAAA,CAAKO,gBAAgB,EAAE;MACzB,CAAC,CAAC;IACH;IAEDP,MAAA,CAAKQ,SAAS,GAAG,CAAC;IAClBR,MAAA,CAAKS,WAAW,CAACT,MAAA,CAAKI,aAAa,CAACM,cAAc,CAAC;;;IAInDV,MAAA,CAAKI,aAAa,CAACM,cAAc,GAAG/C,SAAS;IAC7CoC,YAAY,CAACW,cAAc,GAAG/C,SAAS;IAEvCgD,eAAe,CAAChH,MAAW,EAAEiH,SAAO,EAAE,WAAW,CAAC;IAAC,OAAAC,sBAAA,CAAAb,MAAA;;EACpDc,SAAA,CAAAjB,qBAAA,EAAAC,gBAAA;EAAA,OAAAT,YAAA,CAAAQ,qBAAA;IAAAP,GAAA;IAAA3C,KAAA,EAED,SAAAoE,MAAMA,CAAA;MACJ,OAAOpD,SAAS;;EACjB;IAAA2B,GAAA;IAAAC,GAAA,EAED,SAAAA,IAAA,EAAY;MACV,OAAO,IAAI,CAACiB,SAAS;;;;;;WAKvB,SAAAC,WAAWA,CAAC3C,GAAuB;MACjC,IAAI,IAAI,CAAC4B,SAAS,EAAE;QAClB;MACD;MACD,IAAI,CAACc,SAAS,EAAE;MAChB,IAAI1C,GAAG,KAAKH,SAAS,IAAI,IAAI,CAAC0C,qBAAqB,KAAK,IAAI,EAAE;QAC5D,IAAI,CAACA,qBAAqB,CAACW,QAAQ,CAAClD,GAAG,EAAE,IAAI,CAAC;MAC/C;;;;;WAIH,SAAAmD,WAAWA,CAAA;MACT,IAAI,IAAI,CAACvB,SAAS,EAAE;QAClB,OAAO,CAAC;MACT;MACD,OAAO,EAAE,IAAI,CAACc,SAAS;;;;;;;WAMjB,SAAAD,gBAAgBA,CAAA;MACtB,KAAKW,SAAS,CAAC,IAAI,CAAC;;EACrB;IAAA5B,GAAA;IAAAC,GAAA,EAED,SAAAA,IAAA,EAAY;MACV,IAAI,CAACC,cAAc,EAAE;MACrB,OAAO,IAAI,CAACY,aAAa;;IAG3B;;;AAGG;EAHH;IAAAd,GAAA;IAAA3C,KAAA,EAIU,SAAA6C,cAAcA,CAAA;MACtB,IAAI,IAAI,CAACE,SAAS,EAAE;QAClB,MAAMpB,aAAa,CAACqB,MAAM,wDAA6B;MACxD;;EACF;AAAA,EAzGOnB,eAAe;AC9BzB;;;;;;;;;;;;;;;AAeG;AA4CH;;;;AAIG;AACI,IAAM2C,WAAW,GAAGrI,OAAA;SAoEXsI,aAAaA,CAC3BxC,QAA0B,EACZ;EAAA,IAAdyC,SAAS,GAAA5D,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAE;EAEd,IAAIM,OAAO,GAAGa,QAAQ;EAEtB,IAAI0C,OAAA,CAAOD,SAAS,MAAK,QAAQ,EAAE;IACjC,IAAMhG,KAAI,GAAGgG,SAAS;IACtBA,SAAS,GAAG;MAAEhG,IAAI,EAAJA;IAAI,CAAE;EACrB;EAED,IAAMoD,MAAM,GAAAI,MAAA,CAAAC,MAAA;IACVzD,IAAI,EAAE9B,kBAAkB;IACxB2F,8BAA8B,EAAE;EAAK,GAClCmC,SAAS,CACb;EACD,IAAMhG,IAAI,GAAGoD,MAAM,CAACpD,IAAI;EAExB,IAAI,OAAOA,IAAI,KAAK,QAAQ,IAAI,CAACA,IAAI,EAAE;IACrC,MAAMiD,aAAa,CAACqB,MAAM,CAAwB;MAChDC,OAAO,EAAE2B,MAAM,CAAClG,IAAI;IACrB,EAAC;EACH;EAED0C,OAAO,KAAPA,OAAO,GAAKyD,mBAAmB,EAAE,CAAC;EAElC,IAAI,CAACzD,OAAO,EAAE;IACZ,MAAMO,aAAa,CAACqB,MAAM,wCAAqB;EAChD;EAED,IAAM8B,WAAW,GAAGnG,KAAK,CAACiE,GAAG,CAAClE,IAAI,CAAoB;EACtD,IAAIoG,WAAW,EAAE;;IAEf,IACEC,SAAS,CAAC3D,OAAO,EAAE0D,WAAW,CAAC1D,OAAO,CAAC,IACvC2D,SAAS,CAACjD,MAAM,EAAEgD,WAAW,CAAChD,MAAM,CAAC,EACrC;MACA,OAAOgD,WAAW;IACnB,OAAM;MACL,MAAMnD,aAAa,CAACqB,MAAM,CAAyB;QAAEC,OAAO,EAAEvE;MAAI,CAAE,CAAC;IACtE;EACF;EAED,IAAMnD,SAAS,GAAG,IAAIyJ,kBAAkB,CAACtG,IAAI,CAAC;EAAC,IAAAuG,UAAA,GAAA7E,0BAAA,CACvBtB,WAAW,CAACY,MAAM,EAAE;IAAAwF,MAAA;EAAA;IAA5C,KAAAD,UAAA,CAAApF,CAAA,MAAAqF,MAAA,GAAAD,UAAA,CAAAnF,CAAA,IAAAC,IAAA,GAA8C;MAAA,IAAnCxD,SAAS,GAAA2I,MAAA,CAAAlF,KAAA;MAClBzE,SAAS,CAAC0D,YAAY,CAAC1C,SAAS,CAAC;IAClC;EAAA,SAAA0D,GAAA;IAAAgF,UAAA,CAAA/F,CAAA,CAAAe,GAAA;EAAA;IAAAgF,UAAA,CAAA/E,CAAA;EAAA;EAED,IAAMiF,MAAM,GAAG,IAAItD,eAAe,CAACT,OAAO,EAAEU,MAAM,EAAEvG,SAAS,CAAC;EAE9DoD,KAAK,CAACc,GAAG,CAACf,IAAI,EAAEyG,MAAM,CAAC;EAEvB,OAAOA,MAAM;AACf;AAgDgB,SAAAC,mBAAmBA,CACjCnD,QAAuC,EACvCoD,gBAA2C;EAE3C,IAAIC,SAAS,EAAE,IAAI,CAACC,WAAW,EAAE,EAAE;;IAEjC,MAAM5D,aAAa,CAACqB,MAAM,gFAAyC;EACpE;EAED,IAAIqC,gBAAgB,CAAC9C,8BAA8B,KAAKvB,SAAS,EAAE;IACjEqE,gBAAgB,CAAC9C,8BAA8B,GAAG,KAAK;EACxD;EAED,IAAIiD,UAA2B;EAC/B,IAAItE,cAAc,CAACe,QAAQ,CAAC,EAAE;IAC5BuD,UAAU,GAAGvD,QAAQ,CAACb,OAAO;EAC9B,OAAM;IACLoE,UAAU,GAAGvD,QAAQ;EACtB;;EAGD,IAAMwD,OAAO,GACRvD,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KAAAkD,gBAAgB,CAChB,EAAAG,UAAU,CACd;;;EAID,IAAIC,OAAO,CAAC1B,cAAc,KAAK/C,SAAS,EAAE;IACxC,OAAOyE,OAAO,CAAC1B,cAAc;EAC9B;EAED,IAAM2B,QAAQ,GAAG,SAAXA,QAAQA,CAAI7F,CAAS,EAAY;IACrC,OAAO8F,kBAAA,CAAI9F,CAAC,EAAE+F,MAAM,CAClB,UAACC,IAAI,EAAEC,CAAC;MAAA,OAAMC,IAAI,CAACC,IAAI,CAAC,EAAE,EAAEH,IAAI,CAAC,GAAGC,CAAC,CAACG,UAAU,CAAC,CAAC,CAAC,GAAI,CAAC;IAAA,GACxD,CAAC,CACF;EACH,CAAC;EAED,IAAIZ,gBAAgB,CAACtB,cAAc,KAAK/C,SAAS,EAAE;IACjD,IAAI,OAAO2C,oBAAoB,KAAK,WAAW,EAAE;MAC/C,MAAMhC,aAAa,CAACqB,MAAM,CAExB,4FAAE,CACH;IACF;EACF;EAED,IAAMkD,UAAU,GAAG,EAAE,GAAGR,QAAQ,CAACS,IAAI,CAACC,SAAS,CAACX,OAAO,CAAC,CAAC;EACzD,IAAMX,WAAW,GAAGjG,WAAW,CAAC+D,GAAG,CAACsD,UAAU,CAAsB;EACpE,IAAIpB,WAAW,EAAE;IACdA,WAAqC,CAAChB,WAAW,CAChDuB,gBAAgB,CAACtB,cAAc,CAChC;IACD,OAAOe,WAAW;EACnB;EAED,IAAMvJ,SAAS,GAAG,IAAIyJ,kBAAkB,CAACkB,UAAU,CAAC;EAAC,IAAAG,UAAA,GAAAjG,0BAAA,CAC7BtB,WAAW,CAACY,MAAM,EAAE;IAAA4G,MAAA;EAAA;IAA5C,KAAAD,UAAA,CAAAxG,CAAA,MAAAyG,MAAA,GAAAD,UAAA,CAAAvG,CAAA,IAAAC,IAAA,GAA8C;MAAA,IAAnCxD,SAAS,GAAA+J,MAAA,CAAAtG,KAAA;MAClBzE,SAAS,CAAC0D,YAAY,CAAC1C,SAAS,CAAC;IAClC;EAAA,SAAA0D,GAAA;IAAAoG,UAAA,CAAAnH,CAAA,CAAAe,GAAA;EAAA;IAAAoG,UAAA,CAAAnG,CAAA;EAAA;EAED,IAAMiF,MAAM,GAAG,IAAIjC,qBAAqB,CACtCsC,UAAU,EACVH,gBAAgB,EAChBa,UAAU,EACV3K,SAAS,CACV;EAEDsD,WAAW,CAACY,GAAG,CAACyG,UAAU,EAAEf,MAAM,CAAC;EAEnC,OAAOA,MAAM;AACf;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BG;AACa,SAAAoB,MAAMA,CAAA,EAAkC;EAAA,IAAjC7H,IAAA,GAAAoC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAelE,kBAAkB;EACtD,IAAMoC,GAAG,GAAGL,KAAK,CAACiE,GAAG,CAAClE,IAAI,CAAC;EAC3B,IAAI,CAACM,GAAG,IAAIN,IAAI,KAAK9B,kBAAkB,IAAIiI,mBAAmB,EAAE,EAAE;IAChE,OAAOJ,aAAa,EAAE;EACvB;EACD,IAAI,CAACzF,GAAG,EAAE;IACR,MAAM2C,aAAa,CAACqB,MAAM,CAAkB;MAAEC,OAAO,EAAEvE;IAAI,CAAE,CAAC;EAC/D;EAED,OAAOM,GAAG;AACZ;AAEA;;;AAGG;SACawH,OAAOA,CAAA;EACrB,OAAOC,KAAK,CAACC,IAAI,CAAC/H,KAAK,CAACe,MAAM,EAAE,CAAC;AACnC;AAEA;;;;;;;;;;;;;;;;AAgBG;AAhBH,SAiBsB6E,SAASA,CAAAoC,EAAA;EAAA,OAAAC,UAAA,CAAAC,KAAA,OAAA/F,SAAA;AAAA;AAwB/B;;;;;;;AAOG;AAPH,SAAA8F,WAAA;EAAAA,UAAA,GAAAE,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAxBO,SAAAC,SAAyBjI,GAAgB;IAAA,IAAAkI,gBAAA,EAAAxI,IAAA,EAAAyI,iBAAA;IAAA,OAAAJ,mBAAA,GAAAK,IAAA,UAAAC,UAAAC,SAAA;MAAA,kBAAAA,SAAA,CAAAC,IAAA,GAAAD,SAAA,CAAAE,IAAA;QAAA;UAC1CN,gBAAgB,GAAG,KAAK;UACtBxI,IAAI,GAAGM,GAAG,CAACN,IAAI;UACrB,IAAIC,KAAK,CAACa,GAAG,CAACd,IAAI,CAAC,EAAE;YACnBwI,gBAAgB,GAAG,IAAI;YACvBvI,KAAK,UAAO,CAACD,IAAI,CAAC;UACnB,OAAM,IAAIG,WAAW,CAACW,GAAG,CAACd,IAAI,CAAC,EAAE;YAC1ByI,iBAAiB,GAAGnI,GAA4B;YACtD,IAAImI,iBAAiB,CAAC7C,WAAW,EAAE,IAAI,CAAC,EAAE;cACxCzF,WAAW,UAAO,CAACH,IAAI,CAAC;cACxBwI,gBAAgB,GAAG,IAAI;YACxB;UACF;UAAA,KAEGA,gBAAgB;YAAAI,SAAA,CAAAE,IAAA;YAAA;UAAA;UAAAF,SAAA,CAAAE,IAAA;UAAA,OACZC,OAAO,CAACC,GAAG,CACd1I,GAAuB,CAACzD,SAAS,CAC/BI,YAAY,EAAE,CACdC,GAAG,CAAC,UAAAC,QAAQ;YAAA,OAAIA,QAAQ,UAAO,EAAE;UAAA,EAAC,CACtC;QAAA;UACAmD,GAAuB,CAAC+D,SAAS,GAAG,IAAI;QAAC;QAAA;UAAA,OAAAuE,SAAA,CAAAK,IAAA;MAAA;IAAA,GAAAV,QAAA;EAAA,CAE7C;EAAA,OAAAL,UAAA,CAAAC,KAAA,OAAA/F,SAAA;AAAA;SAUekD,eAAeA,CAC7B4D,gBAAwB,EACxBzL,OAAe,EACf0L,OAAgB;;;;EAIhB,IAAI3L,OAAO,GAAG,CAAA4L,EAAA,GAAAjL,mBAAmB,CAAC+K,gBAAgB,CAAC,MAAI,QAAAE,EAAA,cAAAA,EAAA,GAAAF,gBAAgB;EACvE,IAAIC,OAAO,EAAE;IACX3L,OAAO,QAAAD,MAAA,CAAQ4L,OAAO,CAAE;EACzB;EACD,IAAME,eAAe,GAAG7L,OAAO,CAAC8L,KAAK,CAAC,OAAO,CAAC;EAC9C,IAAMC,eAAe,GAAG9L,OAAO,CAAC6L,KAAK,CAAC,OAAO,CAAC;EAC9C,IAAID,eAAe,IAAIE,eAAe,EAAE;IACtC,IAAMC,OAAO,GAAG,iCAAAjM,MAAA,CACiBC,OAAO,wBAAAD,MAAA,CAAmBE,OAAO,SACjE;IACD,IAAI4L,eAAe,EAAE;MACnBG,OAAO,CAACC,IAAI,mBAAAlM,MAAA,CACOC,OAAO,yDAAmD,CAC5E;IACF;IACD,IAAI6L,eAAe,IAAIE,eAAe,EAAE;MACtCC,OAAO,CAACC,IAAI,CAAC,KAAK,CAAC;IACpB;IACD,IAAIF,eAAe,EAAE;MACnBC,OAAO,CAACC,IAAI,mBAAAlM,MAAA,CACOE,OAAO,yDAAmD,CAC5E;IACF;IACDO,MAAM,CAAC0L,IAAI,CAACF,OAAO,CAAC5L,IAAI,CAAC,GAAG,CAAC,CAAC;IAC9B;EACD;EACDgD,kBAAkB,CAChB,IAAImD,SAAS,IAAAxG,MAAA,CACRC,OAAO,eACV;IAAA,OAAO;MAAEA,OAAO,EAAPA,OAAO;MAAEC,OAAO,EAAPA;IAAO,CAAE;EAAA,CAAC,wCAE7B,CACF;AACH;AAEA;;;;;;AAMG;AACa,SAAAkM,KAAKA,CACnBC,WAA+B,EAC/BlH,OAAoB;EAEpB,IAAIkH,WAAW,KAAK,IAAI,IAAI,OAAOA,WAAW,KAAK,UAAU,EAAE;IAC7D,MAAM3G,aAAa,CAACqB,MAAM,4DAA+B;EAC1D;EACDuF,iBAAiB,CAACD,WAAW,EAAElH,OAAO,CAAC;AACzC;AAEA;;;;;;;;AAQG;AACG,SAAUoH,WAAWA,CAACC,QAAwB;EAClDC,aAAe,CAACD,QAAQ,CAAC;AAC3B;;AC3dA;;;;;;;;;;;;;;;AAeG;AASH,IAAME,OAAO,GAAG,6BAA6B;AAC7C,IAAMC,UAAU,GAAG,CAAC;AACpB,IAAMC,UAAU,GAAG,0BAA0B;AAS7C,IAAIC,SAAS,GAAwC,IAAI;AACzD,SAASC,YAAYA,CAAA;EACnB,IAAI,CAACD,SAAS,EAAE;IACdA,SAAS,GAAGE,MAAM,CAAQL,OAAO,EAAEC,UAAU,EAAE;MAC7CK,OAAO,EAAE,SAATA,OAAOA,CAAGC,EAAE,EAAEC,UAAU,EAAI;;;;;;QAM1B,QAAQA,UAAU;UAChB,KAAK,CAAC;YACJ,IAAI;cACFD,EAAE,CAACE,iBAAiB,CAACP,UAAU,CAAC;YACjC,EAAC,OAAO3J,CAAC,EAAE;;;;cAIVmK,OAAO,CAACjB,IAAI,CAAClJ,CAAC,CAAC;YAChB;QACJ;;IAEJ,EAAC,SAAM,CAAC,UAAAA,CAAC,EAAG;MACX,MAAMyC,aAAa,CAACqB,MAAM,CAAoB;QAC5CsG,oBAAoB,EAAEpK,CAAC,CAACqK;MACzB,EAAC;IACJ,CAAC,CAAC;EACH;EACD,OAAOT,SAAS;AAClB;AAAC,SAEqBU,2BAA2BA,CAAAC,GAAA;EAAA,OAAAC,4BAAA,CAAA7C,KAAA,OAAA/F,SAAA;AAAA;AAAA,SAAA4I,6BAAA;EAAAA,4BAAA,GAAA5C,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAA1C,SAAA2C,SACL3K,GAAgB;IAAA,IAAAkK,EAAA,EAAAU,EAAA,EAAAC,MAAA,EAAAC,WAAA;IAAA,OAAA/C,mBAAA,GAAAK,IAAA,UAAA2C,UAAAC,SAAA;MAAA,kBAAAA,SAAA,CAAAzC,IAAA,GAAAyC,SAAA,CAAAxC,IAAA;QAAA;UAAAwC,SAAA,CAAAzC,IAAA;UAAAyC,SAAA,CAAAxC,IAAA;UAAA,OAGGuB,YAAY,EAAE;QAAA;UAAzBG,EAAE,GAAAc,SAAA,CAAAC,IAAA;UACFL,EAAE,GAAGV,EAAE,CAACgB,WAAW,CAACrB,UAAU,CAAC;UAAAmB,SAAA,CAAAxC,IAAA;UAAA,OAChBoC,EAAE,CAACO,WAAW,CAACtB,UAAU,CAAC,CAACjG,GAAG,CAACwH,UAAU,CAACpL,GAAG,CAAC,CAAC;QAAA;UAA9D6K,MAAM,GAAAG,SAAA,CAAAC,IAAA;UAAAD,SAAA,CAAAxC,IAAA;UAAA,OAGNoC,EAAE,CAAC7J,IAAI;QAAA;UAAA,OAAAiK,SAAA,CAAAK,MAAA,WACNR,MAAM;QAAA;UAAAG,SAAA,CAAAzC,IAAA;UAAAyC,SAAA,CAAAM,EAAA,GAAAN,SAAA;UAEb,IAAIA,SAAA,CAAAM,EAAA,YAAaC,aAAa,EAAE;YAC9B7N,MAAM,CAAC0L,IAAI,CAAC4B,SAAA,CAAAM,EAAA,CAAEf,OAAO,CAAC;UACvB,OAAM;YACCO,WAAW,GAAGnI,aAAa,CAACqB,MAAM,CAAmB;cACzDsG,oBAAoB,EAAGU,SAAA,CAAAM,EAAA,KAAW,QAAXN,SAAA,CAAAM,EAAA,uBAAAN,SAAA,CAAAM,EAAA,CAAaf;YACrC,EAAC;YACF7M,MAAM,CAAC0L,IAAI,CAAC0B,WAAW,CAACP,OAAO,CAAC;UACjC;QAAA;QAAA;UAAA,OAAAS,SAAA,CAAArC,IAAA;MAAA;IAAA,GAAAgC,QAAA;EAAA,CAEJ;EAAA,OAAAD,4BAAA,CAAA7C,KAAA,OAAA/F,SAAA;AAAA;AAAA,SAEqB0J,0BAA0BA,CAAAC,GAAA,EAAAC,GAAA;EAAA,OAAAC,2BAAA,CAAA9D,KAAA,OAAA/F,SAAA;AAAA;AAAA,SAAA6J,4BAAA;EAAAA,2BAAA,GAAA7D,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAzC,SAAA4D,SACL5L,GAAgB,EAChB6L,eAAsC;IAAA,IAAA3B,EAAA,EAAAU,EAAA,EAAAO,WAAA,EAAAL,WAAA;IAAA,OAAA/C,mBAAA,GAAAK,IAAA,UAAA0D,UAAAC,SAAA;MAAA,kBAAAA,SAAA,CAAAxD,IAAA,GAAAwD,SAAA,CAAAvD,IAAA;QAAA;UAAAuD,SAAA,CAAAxD,IAAA;UAAAwD,SAAA,CAAAvD,IAAA;UAAA,OAGnBuB,YAAY,EAAE;QAAA;UAAzBG,EAAE,GAAA6B,SAAA,CAAAd,IAAA;UACFL,EAAE,GAAGV,EAAE,CAACgB,WAAW,CAACrB,UAAU,EAAE,WAAW,CAAC;UAC5CsB,WAAW,GAAGP,EAAE,CAACO,WAAW,CAACtB,UAAU,CAAC;UAAAkC,SAAA,CAAAvD,IAAA;UAAA,OACxC2C,WAAW,CAACa,GAAG,CAACH,eAAe,EAAET,UAAU,CAACpL,GAAG,CAAC,CAAC;QAAA;UAAA+L,SAAA,CAAAvD,IAAA;UAAA,OACjDoC,EAAE,CAAC7J,IAAI;QAAA;UAAAgL,SAAA,CAAAvD,IAAA;UAAA;QAAA;UAAAuD,SAAA,CAAAxD,IAAA;UAAAwD,SAAA,CAAAT,EAAA,GAAAS,SAAA;UAEb,IAAIA,SAAA,CAAAT,EAAA,YAAaC,aAAa,EAAE;YAC9B7N,MAAM,CAAC0L,IAAI,CAAC2C,SAAA,CAAAT,EAAA,CAAEf,OAAO,CAAC;UACvB,OAAM;YACCO,WAAW,GAAGnI,aAAa,CAACqB,MAAM,CAAqB;cAC3DsG,oBAAoB,EAAGyB,SAAA,CAAAT,EAAA,KAAW,QAAXS,SAAA,CAAAT,EAAA,uBAAAS,SAAA,CAAAT,EAAA,CAAaf;YACrC,EAAC;YACF7M,MAAM,CAAC0L,IAAI,CAAC0B,WAAW,CAACP,OAAO,CAAC;UACjC;QAAA;QAAA;UAAA,OAAAwB,SAAA,CAAApD,IAAA;MAAA;IAAA,GAAAiD,QAAA;EAAA,CAEJ;EAAA,OAAAD,2BAAA,CAAA9D,KAAA,OAAA/F,SAAA;AAAA;AAED,SAASsJ,UAAUA,CAACpL,GAAgB;EAClC,UAAA/C,MAAA,CAAU+C,GAAG,CAACN,IAAI,OAAAzC,MAAA,CAAI+C,GAAG,CAACoC,OAAO,CAAC6J,KAAK;AACzC;;ACjHA;;;;;;;;;;;;;;;AAeG;AAsBH,IAAMC,gBAAgB,GAAG,IAAI;AAC7B;AACA,IAAMC,qCAAqC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI;AAAC,IAE1DC,oBAAoB;EAyB/B,SAAAA,qBAA6B7P,SAA6B;IAAA,IAAA8P,MAAA;IAAA7P,eAAA,OAAA4P,oBAAA;IAA7B,IAAS,CAAA7P,SAAA,GAATA,SAAS;IAlBtC;;;;;;;;AAQG;IACH,IAAgB,CAAA+P,gBAAA,GAAiC,IAAI;IAUnD,IAAMtM,GAAG,GAAG,IAAI,CAACzD,SAAS,CAACkF,WAAW,CAAC,KAAK,CAAC,CAACzE,YAAY,EAAE;IAC5D,IAAI,CAACuP,QAAQ,GAAG,IAAIC,oBAAoB,CAACxM,GAAG,CAAC;IAC7C,IAAI,CAACyM,uBAAuB,GAAG,IAAI,CAACF,QAAQ,CAACG,IAAI,EAAE,CAACC,IAAI,CAAC,UAAA9B,MAAM,EAAG;MAChEwB,MAAI,CAACC,gBAAgB,GAAGzB,MAAM;MAC9B,OAAOA,MAAM;IACf,CAAC,CAAC;;EAGJ;;;;;;AAMG;EANH,OAAAnH,YAAA,CAAA0I,oBAAA;IAAAzI,GAAA;IAAA3C,KAAA;MAAA,IAAA4L,iBAAA,GAAA9E,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAOA,SAAA6E,QAAA;QAAA,IAAA/D,EAAA,EAAAgE,EAAA,EAAAC,cAAA,EAAAC,KAAA,EAAAC,IAAA;QAAA,OAAAlF,mBAAA,GAAAK,IAAA,UAAA8E,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAA5E,IAAA,GAAA4E,QAAA,CAAA3E,IAAA;YAAA;cAAA2E,QAAA,CAAA5E,IAAA;cAEUwE,cAAc,GAAG,IAAI,CAACxQ,SAAS,CAClCkF,WAAW,CAAC,iBAAiB,CAAC,CAC9BzE,YAAY,EAAE,E;;cAIXgQ,KAAK,GAAGD,cAAc,CAACtQ,qBAAqB,EAAE;cAC9CwQ,IAAI,GAAGG,gBAAgB,EAAE;cAAA,MAC3B,EAAAtE,EAAA,OAAI,CAACwD,gBAAgB,MAAE,QAAAxD,EAAA,uBAAAA,EAAA,CAAAuE,UAAU,KAAI,IAAI;gBAAAF,QAAA,CAAA3E,IAAA;gBAAA;cAAA;cAAA2E,QAAA,CAAA3E,IAAA;cAAA,OACb,IAAI,CAACiE,uBAAuB;YAAA;cAA1D,IAAI,CAACH,gBAAgB,GAAAa,QAAA,CAAAlC,IAAA;cAAA,MAEjB,EAAA6B,EAAA,OAAI,CAACR,gBAAgB,MAAE,QAAAQ,EAAA,uBAAAA,EAAA,CAAAO,UAAU,KAAI,IAAI;gBAAAF,QAAA,CAAA3E,IAAA;gBAAA;cAAA;cAAA,OAAA2E,QAAA,CAAA9B,MAAA;YAAA;cAAA,MAO7C,IAAI,CAACiB,gBAAgB,CAACgB,qBAAqB,KAAKL,IAAI,IACpD,IAAI,CAACX,gBAAgB,CAACe,UAAU,CAACE,IAAI,CACnC,UAAAC,mBAAmB;gBAAA,OAAIA,mBAAmB,CAACP,IAAI,KAAKA,IAAI;cAAA,EACzD;gBAAAE,QAAA,CAAA3E,IAAA;gBAAA;cAAA;cAAA,OAAA2E,QAAA,CAAA9B,MAAA;YAAA;;cAKD,IAAI,CAACiB,gBAAgB,CAACe,UAAU,CAAClE,IAAI,CAAC;gBAAE8D,IAAI,EAAJA,IAAI;gBAAED,KAAK,EAALA;cAAK,CAAE,CAAC;YAAC;;cAGzD,IAAI,CAACV,gBAAgB,CAACe,UAAU,GAC9B,IAAI,CAACf,gBAAgB,CAACe,UAAU,CAACjQ,MAAM,CAAC,UAAAoQ,mBAAmB,EAAG;gBAC5D,IAAMC,WAAW,GAAG,IAAIC,IAAI,CAACF,mBAAmB,CAACP,IAAI,CAAC,CAACU,OAAO,EAAE;gBAChE,IAAMC,GAAG,GAAGF,IAAI,CAACE,GAAG,EAAE;gBACtB,OAAOA,GAAG,GAAGH,WAAW,IAAItB,qCAAqC;cACnE,CAAC,CAAC;cAAC,OAAAgB,QAAA,CAAA9B,MAAA,WACE,IAAI,CAACkB,QAAQ,CAACsB,SAAS,CAAC,IAAI,CAACvB,gBAAgB,CAAC;YAAA;cAAAa,QAAA,CAAA5E,IAAA;cAAA4E,QAAA,CAAA7B,EAAA,GAAA6B,QAAA;cAErDzP,MAAM,CAAC0L,IAAI,CAAA+D,QAAA,CAAA7B,EAAE,CAAC;YAAC;YAAA;cAAA,OAAA6B,QAAA,CAAAxE,IAAA;UAAA;QAAA,GAAAkE,OAAA;MAAA,CAElB;MAAA,SAzCKlL,gBAAgBA,CAAA;QAAA,OAAAiL,iBAAA,CAAA/E,KAAA,OAAA/F,SAAA;MAAA;MAAA,OAAhBH,gBAAgB;IAAA;IA2CtB;;;;;;AAMG;IANH;EAAA;IAAAgC,GAAA;IAAA3C,KAAA;MAAA,IAAA8M,oBAAA,GAAAhG,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAOA,SAAA+F,SAAA;QAAA,IAAAjF,EAAA,EAAAmE,IAAA,EAAAe,qBAAA,EAAAC,gBAAA,EAAAC,aAAA,EAAAC,YAAA;QAAA,OAAApG,mBAAA,GAAAK,IAAA,UAAAgG,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAA9F,IAAA,GAAA8F,SAAA,CAAA7F,IAAA;YAAA;cAAA6F,SAAA,CAAA9F,IAAA;cAAA,MAEQ,IAAI,CAAC+D,gBAAgB,KAAK,IAAI;gBAAA+B,SAAA,CAAA7F,IAAA;gBAAA;cAAA;cAAA6F,SAAA,CAAA7F,IAAA;cAAA,OAC1B,IAAI,CAACiE,uBAAuB;YAAA;cAAA,MAIlC,EAAA3D,EAAA,OAAI,CAACwD,gBAAgB,MAAE,QAAAxD,EAAA,uBAAAA,EAAA,CAAAuE,UAAU,KAAI,IAAI,IACzC,IAAI,CAACf,gBAAgB,CAACe,UAAU,CAACtL,MAAM,KAAK,CAAC;gBAAAsM,SAAA,CAAA7F,IAAA;gBAAA;cAAA;cAAA,OAAA6F,SAAA,CAAAhD,MAAA,WAEtC,EAAE;YAAA;cAEL4B,IAAI,GAAGG,gBAAgB,EAAE,E;sCAEakB,0BAA0B,CACpE,IAAI,CAAChC,gBAAgB,CAACe,UAAU,CACjC,EAFOY,gBAAgB,GAAAD,qBAAA,CAAhBC,gBAAgB,EAAEC,aAAa,GAAAF,qBAAA,CAAbE,aAAa;cAGjCC,YAAY,GAAGI,6BAA6B,CAChDpH,IAAI,CAACC,SAAS,CAAC;gBAAEjK,OAAO,EAAE,CAAC;gBAAEkQ,UAAU,EAAEY;cAAgB,CAAE,CAAC,CAC7D,E;cAED,IAAI,CAAC3B,gBAAgB,CAACgB,qBAAqB,GAAGL,IAAI;cAAC,MAC/CiB,aAAa,CAACnM,MAAM,GAAG,CAAC;gBAAAsM,SAAA,CAAA7F,IAAA;gBAAA;cAAA;;cAE1B,IAAI,CAAC8D,gBAAgB,CAACe,UAAU,GAAGa,aAAa;;;;;qBAI1C,IAAI,CAAC3B,QAAQ,CAACsB,SAAS,CAAC,IAAI,CAACvB,gBAAgB,CAAC;YAAA;cAAA+B,SAAA,CAAA7F,IAAA;cAAA;YAAA;cAEpD,IAAI,CAAC8D,gBAAgB,CAACe,UAAU,GAAG,EAAE;;cAErC,KAAK,IAAI,CAACd,QAAQ,CAACsB,SAAS,CAAC,IAAI,CAACvB,gBAAgB,CAAC;YAAC;cAAA,OAAA+B,SAAA,CAAAhD,MAAA,WAE/C8C,YAAY;YAAA;cAAAE,SAAA,CAAA9F,IAAA;cAAA8F,SAAA,CAAA/C,EAAA,GAAA+C,SAAA;cAEnB3Q,MAAM,CAAC0L,IAAI,CAAAiF,SAAA,CAAA/C,EAAE,CAAC;cAAC,OAAA+C,SAAA,CAAAhD,MAAA,WACR,EAAE;YAAA;YAAA;cAAA,OAAAgD,SAAA,CAAA1F,IAAA;UAAA;QAAA,GAAAoF,QAAA;MAAA,CAEZ;MAAA,SAvCKS,mBAAmBA,CAAA;QAAA,OAAAV,oBAAA,CAAAjG,KAAA,OAAA/F,SAAA;MAAA;MAAA,OAAnB0M,mBAAmB;IAAA;EAAA;AAAA;AA0C3B,SAASpB,gBAAgBA,CAAA;EACvB,IAAMqB,KAAK,GAAG,IAAIf,IAAI,EAAE;;EAExB,OAAOe,KAAK,CAACC,WAAW,EAAE,CAACC,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC;AAC7C;SAEgBL,0BAA0BA,CACxCM,eAAsC,EACZ;EAAA,IAA1BC,OAAO,GAAA/M,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGoK,gBAAgB;;;EAO1B,IAAM+B,gBAAgB,GAA4B,EAAE;;EAEpD,IAAIC,aAAa,GAAGU,eAAe,CAACE,KAAK,EAAE;EAAC,IAAAC,UAAA,GAAA3N,0BAAA,CACVwN,eAAe;IAAAI,MAAA;EAAA;IAAA,IAAAC,KAAA,YAAAA,MAAA,EAAE;QAAA,IAAxCzB,mBAAmB,GAAAwB,MAAA,CAAAhO,KAAA;;QAE5B,IAAMkO,cAAc,GAAGjB,gBAAgB,CAACkB,IAAI,CAC1C,UAAAC,EAAE;UAAA,OAAIA,EAAE,CAACpC,KAAK,KAAKQ,mBAAmB,CAACR,KAAK;QAAA,EAC7C;QACD,IAAI,CAACkC,cAAc,EAAE;;UAEnBjB,gBAAgB,CAAC9E,IAAI,CAAC;YACpB6D,KAAK,EAAEQ,mBAAmB,CAACR,KAAK;YAChCqC,KAAK,EAAE,CAAC7B,mBAAmB,CAACP,IAAI;UACjC,EAAC;UACF,IAAIqC,UAAU,CAACrB,gBAAgB,CAAC,GAAGY,OAAO,EAAE;;;YAG1CZ,gBAAgB,CAACsB,GAAG,EAAE;YAAC;UAExB;QACF,OAAM;UACLL,cAAc,CAACG,KAAK,CAAClG,IAAI,CAACqE,mBAAmB,CAACP,IAAI,CAAC;;;UAGnD,IAAIqC,UAAU,CAACrB,gBAAgB,CAAC,GAAGY,OAAO,EAAE;YAC1CK,cAAc,CAACG,KAAK,CAACE,GAAG,EAAE;YAAC;UAE5B;QACF;;;QAGDrB,aAAa,GAAGA,aAAa,CAACY,KAAK,CAAC,CAAC,CAAC;MACvC;MAAAU,IAAA;IA7BD,KAAAT,UAAA,CAAAlO,CAAA,MAAAmO,MAAA,GAAAD,UAAA,CAAAjO,CAAA,IAAAC,IAAA;MAAAyO,IAAA,GAAAP,KAAA;MAAA,IAAAO,IAAA,QAeM;IAAM;EAcX,SAAAvO,GAAA;IAAA8N,UAAA,CAAA7O,CAAA,CAAAe,GAAA;EAAA;IAAA8N,UAAA,CAAA7N,CAAA;EAAA;EACD,OAAO;IACL+M,gBAAgB,EAAhBA,gBAAgB;IAChBC,aAAa,EAAbA;GACD;AACH;AAAC,IAEY1B,oBAAoB;EAE/B,SAAAA,qBAAmBxM,GAAgB;IAAAxD,eAAA,OAAAgQ,oBAAA;IAAhB,IAAG,CAAAxM,GAAA,GAAHA,GAAG;IACpB,IAAI,CAACyP,uBAAuB,GAAG,IAAI,CAACC,4BAA4B,EAAE;;EACnE,OAAAhM,YAAA,CAAA8I,oBAAA;IAAA7I,GAAA;IAAA3C,KAAA;MAAA,IAAA2O,6BAAA,GAAA7H,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CACD,SAAA4H,SAAA;QAAA,OAAA7H,mBAAA,GAAAK,IAAA,UAAAyH,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAAvH,IAAA,GAAAuH,SAAA,CAAAtH,IAAA;YAAA;cAAA,IACOuH,oBAAoB,EAAE;gBAAAD,SAAA,CAAAtH,IAAA;gBAAA;cAAA;cAAA,OAAAsH,SAAA,CAAAzE,MAAA,WAClB,KAAK;YAAA;cAAA,OAAAyE,SAAA,CAAAzE,MAAA,WAEL2E,yBAAyB,EAAE,CAC/BrD,IAAI,CAAC;gBAAA,OAAM,IAAI;cAAA,EAAC,SACX,CAAC;gBAAA,OAAM,KAAK;cAAA,EAAC;YAAA;YAAA;cAAA,OAAAmD,SAAA,CAAAnH,IAAA;UAAA;QAAA,GAAAiH,QAAA;MAAA,CAExB;MAAA,SARKF,4BAA4BA,CAAA;QAAA,OAAAC,6BAAA,CAAA9H,KAAA,OAAA/F,SAAA;MAAA;MAAA,OAA5B4N,4BAA4B;IAAA;IASlC;;AAEG;EAFH;IAAA/L,GAAA;IAAA3C,KAAA;MAAA,IAAAiP,KAAA,GAAAnI,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAGA,SAAAkI,SAAA;QAAA,IAAAC,eAAA,EAAAC,kBAAA;QAAA,OAAArI,mBAAA,GAAAK,IAAA,UAAAiI,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAA/H,IAAA,GAAA+H,SAAA,CAAA9H,IAAA;YAAA;cAAA8H,SAAA,CAAA9H,IAAA;cAAA,OACgC,IAAI,CAACiH,uBAAuB;YAAA;cAApDU,eAAe,GAAAG,SAAA,CAAArF,IAAA;cAAA,IAChBkF,eAAe;gBAAAG,SAAA,CAAA9H,IAAA;gBAAA;cAAA;cAAA,OAAA8H,SAAA,CAAAjF,MAAA,WACX;gBAAEgC,UAAU,EAAE;cAAE,CAAE;YAAA;cAAAiD,SAAA,CAAA9H,IAAA;cAAA,OAEQgC,2BAA2B,CAAC,IAAI,CAACxK,GAAG,CAAC;YAAA;cAAhEoQ,kBAAkB,GAAAE,SAAA,CAAArF,IAAA;cAAA,MACpBmF,kBAAkB,KAAlB,QAAAA,kBAAkB,uBAAlBA,kBAAkB,CAAE/C,UAAU;gBAAAiD,SAAA,CAAA9H,IAAA;gBAAA;cAAA;cAAA,OAAA8H,SAAA,CAAAjF,MAAA,WACzB+E,kBAAkB;YAAA;cAAA,OAAAE,SAAA,CAAAjF,MAAA,WAElB;gBAAEgC,UAAU,EAAE;cAAE,CAAE;YAAA;YAAA;cAAA,OAAAiD,SAAA,CAAA3H,IAAA;UAAA;QAAA,GAAAuH,QAAA;MAAA,CAG9B;MAAA,SAZKxD,IAAIA,CAAA;QAAA,OAAAuD,KAAA,CAAApI,KAAA,OAAA/F,SAAA;MAAA;MAAA,OAAJ4K,IAAI;IAAA,I;;;;;iFAcV,SAAA6D,SAAgBC,gBAAuC;QAAA,IAAA1H,EAAA,EAAAqH,eAAA,EAAAM,wBAAA;QAAA,OAAA1I,mBAAA,GAAAK,IAAA,UAAAsI,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAApI,IAAA,GAAAoI,SAAA,CAAAnI,IAAA;YAAA;cAAAmI,SAAA,CAAAnI,IAAA;cAAA,OACvB,IAAI,CAACiH,uBAAuB;YAAA;cAApDU,eAAe,GAAAQ,SAAA,CAAA1F,IAAA;cAAA,IAChBkF,eAAe;gBAAAQ,SAAA,CAAAnI,IAAA;gBAAA;cAAA;cAAA,OAAAmI,SAAA,CAAAtF,MAAA;YAAA;cAAAsF,SAAA,CAAAnI,IAAA;cAAA,OAGqB,IAAI,CAACkE,IAAI,EAAE;YAAA;cAA5C+D,wBAAwB,GAAAE,SAAA,CAAA1F,IAAA;cAAA,OAAA0F,SAAA,CAAAtF,MAAA,WACvBG,0BAA0B,CAAC,IAAI,CAACxL,GAAG,EAAE;gBAC1CsN,qBAAqB,EACnB,CAAAxE,EAAA,GAAA0H,gBAAgB,CAAClD,qBAAqB,MACtC,QAAAxE,EAAA,cAAAA,EAAA,GAAA2H,wBAAwB,CAACnD,qBAAqB;gBAChDD,UAAU,EAAEmD,gBAAgB,CAACnD;cAC9B,EAAC;YAAA;YAAA;cAAA,OAAAsD,SAAA,CAAAhI,IAAA;UAAA;QAAA,GAAA4H,QAAA;MAAA,CAEL;MAAA,SAbK1C,SAASA,CAAA+C,GAAA;QAAA,OAAAC,UAAA,CAAAhJ,KAAA,OAAA/F,SAAA;MAAA;MAAA,OAAT+L,SAAS;IAAA,I;;;;2EAef,SAAAiD,SAAUN,gBAAuC;QAAA,IAAA1H,EAAA,EAAAqH,eAAA,EAAAM,wBAAA;QAAA,OAAA1I,mBAAA,GAAAK,IAAA,UAAA2I,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAAzI,IAAA,GAAAyI,SAAA,CAAAxI,IAAA;YAAA;cAAAwI,SAAA,CAAAxI,IAAA;cAAA,OACjB,IAAI,CAACiH,uBAAuB;YAAA;cAApDU,eAAe,GAAAa,SAAA,CAAA/F,IAAA;cAAA,IAChBkF,eAAe;gBAAAa,SAAA,CAAAxI,IAAA;gBAAA;cAAA;cAAA,OAAAwI,SAAA,CAAA3F,MAAA;YAAA;cAAA2F,SAAA,CAAAxI,IAAA;cAAA,OAGqB,IAAI,CAACkE,IAAI,EAAE;YAAA;cAA5C+D,wBAAwB,GAAAO,SAAA,CAAA/F,IAAA;cAAA,OAAA+F,SAAA,CAAA3F,MAAA,WACvBG,0BAA0B,CAAC,IAAI,CAACxL,GAAG,EAAE;gBAC1CsN,qBAAqB,EACnB,CAAAxE,EAAA,GAAA0H,gBAAgB,CAAClD,qBAAqB,MACtC,QAAAxE,EAAA,cAAAA,EAAA,GAAA2H,wBAAwB,CAACnD,qBAAqB;gBAChDD,UAAU,KAAApQ,MAAA,CAAA0J,kBAAA,CACL8J,wBAAwB,CAACpD,UAAU,GAAA1G,kBAAA,CACnC6J,gBAAgB,CAACnD,UAAU;cAEjC,EAAC;YAAA;YAAA;cAAA,OAAA2D,SAAA,CAAArI,IAAA;UAAA;QAAA,GAAAmI,QAAA;MAAA,CAEL;MAAA,SAhBKG,GAAGA,CAAAC,GAAA;QAAA,OAAAC,IAAA,CAAAtJ,KAAA,OAAA/F,SAAA;MAAA;MAAA,OAAHmP,GAAG;IAAA;EAAA;AAAA;AAmBX;;;;AAIG;AACG,SAAU3B,UAAUA,CAACV,eAAwC;;EAEjE,OAAOL,6BAA6B;;EAElCpH,IAAI,CAACC,SAAS,CAAC;IAAEjK,OAAO,EAAE,CAAC;IAAEkQ,UAAU,EAAEuB;EAAe,CAAE,CAAC,CAC5D,CAAC7M,MAAM;AACV;;AChTA;;;;;;;;;;;;;;;AAeG;AASG,SAAUqP,sBAAsBA,CAACvI,OAAgB;EACrDvI,kBAAkB,CAChB,IAAImD,SAAS,CACX,iBAAiB,EACjB,UAAAlH,SAAS;IAAA,OAAI,IAAID,yBAAyB,CAACC,SAAS,CAAC;EAAA,yCAEtD,CACF;EACD+D,kBAAkB,CAChB,IAAImD,SAAS,CACX,WAAW,EACX,UAAAlH,SAAS;IAAA,OAAI,IAAI6P,oBAAoB,CAAC7P,SAAS,CAAC;EAAA,yCAEjD,CACF;;EAGDyI,eAAe,CAAChH,MAAI,EAAEiH,SAAO,EAAE4D,OAAO,CAAC;;EAEvC7D,eAAe,CAAChH,MAAI,EAAEiH,SAAO,EAAE,SAAkB,CAAC;;EAElDD,eAAe,CAAC,SAAS,EAAE,EAAE,CAAC;AAChC;;AC9CA;;;;;AAKG;AAyBHoM,sBAAsB,CAAC,EAAiB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}