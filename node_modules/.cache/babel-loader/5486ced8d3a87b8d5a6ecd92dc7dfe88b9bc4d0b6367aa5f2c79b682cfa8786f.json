{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref } from 'vue';\nimport { db } from '../firebase';\nimport { addDoc, collection } from 'firebase/firestore';\nexport default {\n  setup() {\n    const questions = ref([]);\n    const title = ref(\"\");\n    const topic = ref(\"\");\n    const difficulty = ref(null);\n    const addQuestion = () => {\n      questions.value.push({\n        question: \"\",\n        options: [\"\", \"\", \"\"],\n        correctAnswer: \"\"\n      });\n    };\n    const createQuizz = async () => {\n      await addDoc(collection(db, 'Quizzes'), {\n        title: title.value,\n        topic: topic.value,\n        difficulty: difficulty.value,\n        questions: questions.value\n      });\n      title.value = \"\";\n      topic.value = \"\";\n      difficulty.value = null;\n      questions.value = [];\n    };\n    return {\n      questions,\n      title,\n      topic,\n      difficulty,\n      addQuestion,\n      createQuizz\n    };\n  }\n};","map":{"version":3,"names":["ref","db","addDoc","collection","setup","questions","title","topic","difficulty","addQuestion","value","push","question","options","correctAnswer","createQuizz"],"sources":["/Users/souhaib./Quizz/Quiz/src/components/createQuizz.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <h1>Create a quizz</h1>\r\n        <form @submit.prevent = \"createQuizz\">\r\n            <div class=\"form-group\">\r\n                <label for=\"title\">Titre</label>\r\n                <input type=\"text\" v-model=\"title\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"topic\">Topic</label>\r\n                <input type=\"text\" v-model=\"topic\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"difficulty\">Difficulty    </label>\r\n                <label for=\"easy\">Easy</label>\r\n                <input type=\"radio\" value=\"Easy\" v-model=\"difficulty\">\r\n                <label for=\"medium\">Medium</label>\r\n                <input type=\"radio\" value=\"Medium\" v-model=\"difficulty\">\r\n                <label for=\"hard\">Hard</label>\r\n                <input type=\"radio\" value=\"Hard\" v-model=\"difficulty\">\r\n            </div>\r\n            <div v-for=\"(question, index) in questions\" :key=\"index\">\r\n                <p>If it is a true/false question, type true in option in option 1, false in option 2 and the correct answer in the correct answer field</p>\r\n                <input type=\"text\" v-model=\"question.question\" placeholder=\"Enter a question\">\r\n                <div class=\"grid grid-cols-2 gap-2 mb-2\">\r\n        <input\r\n          v-for=\"(option, oIndex) in question.options\"\r\n          :key=\"oIndex\"\r\n          type=\"text\"\r\n          v-model=\"question.options[oIndex]\"\r\n          :placeholder=\"`Option ${oIndex + 1}`\"\r\n          class=\"p-2 border rounded\"\r\n        />\r\n      </div>\r\n      <input\r\n        type=\"text\"\r\n        v-model=\"question.correctAnswer\"\r\n        placeholder=\"Correct answer\"\r\n        class=\"w-full p-2 border rounded\"\r\n      />\r\n            </div>\r\n            <button @click=\"addQuestion\" type=\"button\" class=\"btn btn-success\">Add Question</button>\r\n            <br>\r\n            <button class=\"btn btn-success\" type=\"submit\">Save</button>\r\n        </form>\r\n        <router-link :to=\"'/'\">Home</router-link>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport {ref} from 'vue'\r\nimport {db} from '../firebase'\r\nimport {addDoc, collection} from 'firebase/firestore'\r\n\r\n\r\nexport default{\r\n    setup() {\r\n        const questions = ref([])\r\n        const title = ref(\"\")\r\n        const topic = ref(\"\")\r\n        const difficulty = ref(null)\r\n        const addQuestion = () => {\r\n            questions.value.push({\r\n                question: \"\",\r\n                options: [\"\", \"\", \"\"],\r\n                correctAnswer: \"\"\r\n            })\r\n        }\r\n\r\n        const createQuizz = async () => {\r\n            await addDoc(collection(db, 'Quizzes'), {\r\n                title: title.value,\r\n                topic: topic.value,\r\n                difficulty: difficulty.value,\r\n                questions: questions.value\r\n            })\r\n            title.value = \"\"\r\n            topic.value = \"\"\r\n            difficulty.value = null\r\n            questions.value = []\r\n\r\n        }\r\n\r\n        return {\r\n            questions,\r\n            title,\r\n            topic,\r\n            difficulty,\r\n            addQuestion,\r\n            createQuizz\r\n        }\r\n    }\r\n}\r\n\r\n</script>"],"mappings":";AAkDA,SAAQA,GAAG,QAAO,KAAI;AACtB,SAAQC,EAAE,QAAO,aAAY;AAC7B,SAAQC,MAAM,EAAEC,UAAU,QAAO,oBAAmB;AAGpD,eAAc;EACVC,KAAKA,CAAA,EAAG;IACJ,MAAMC,SAAQ,GAAIL,GAAG,CAAC,EAAE;IACxB,MAAMM,KAAI,GAAIN,GAAG,CAAC,EAAE;IACpB,MAAMO,KAAI,GAAIP,GAAG,CAAC,EAAE;IACpB,MAAMQ,UAAS,GAAIR,GAAG,CAAC,IAAI;IAC3B,MAAMS,WAAU,GAAIA,CAAA,KAAM;MACtBJ,SAAS,CAACK,KAAK,CAACC,IAAI,CAAC;QACjBC,QAAQ,EAAE,EAAE;QACZC,OAAO,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;QACrBC,aAAa,EAAE;MACnB,CAAC;IACL;IAEA,MAAMC,WAAU,GAAI,MAAAA,CAAA,KAAY;MAC5B,MAAMb,MAAM,CAACC,UAAU,CAACF,EAAE,EAAE,SAAS,CAAC,EAAE;QACpCK,KAAK,EAAEA,KAAK,CAACI,KAAK;QAClBH,KAAK,EAAEA,KAAK,CAACG,KAAK;QAClBF,UAAU,EAAEA,UAAU,CAACE,KAAK;QAC5BL,SAAS,EAAEA,SAAS,CAACK;MACzB,CAAC;MACDJ,KAAK,CAACI,KAAI,GAAI,EAAC;MACfH,KAAK,CAACG,KAAI,GAAI,EAAC;MACfF,UAAU,CAACE,KAAI,GAAI,IAAG;MACtBL,SAAS,CAACK,KAAI,GAAI,EAAC;IAEvB;IAEA,OAAO;MACHL,SAAS;MACTC,KAAK;MACLC,KAAK;MACLC,UAAU;MACVC,WAAW;MACXM;IACJ;EACJ;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}